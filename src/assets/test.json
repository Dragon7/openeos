{
  "pages": {
    "start": [
      {
        "image": {
          "locator": "gallery:6aee930c-2419-40e8-bef3-f029d847609f/970320"
        }
      },
      {
        "if": {
          "condition": "!gameInit",
          "commands": [
            {
              "say": {
                "label": "<p>I need to grab some stuff to get started.</p><p>You may hear some clicks.</p><p>Okay?</p>",
                "mode": "instant"
              }
            },
            {
              "choice": {
                "options": [
                  {
                    "label": "Do your thing!",
                    "commands": [
                      {
                        "audio.play": {
                          "locator": "file:120bpm.mp3",
                          "loops": 0,
                          "id": "b120",
                          "volume": 0,
                          "background": true
                        }
                      },
                      {
                        "audio.play": {
                          "locator": "file:150bpm.mp3",
                          "loops": 0,
                          "id": "b150",
                          "volume": 0,
                          "background": true
                        }
                      },
                      {
                        "audio.play": {
                          "locator": "file:180bpm.mp3",
                          "loops": 0,
                          "id": "b180",
                          "volume": 0,
                          "background": true
                        }
                      },
                      {
                        "audio.play": {
                          "locator": "file:240bpm.mp3",
                          "loops": 0,
                          "id": "b240",
                          "volume": 0,
                          "background": true
                        }
                      },
                      {
                        "audio.play": {
                          "locator": "file:300bpm.mp3",
                          "loops": 0,
                          "id": "b300",
                          "volume": 0,
                          "background": true
                        }
                      },
                      {
                        "eval": {
                          "script": "setBeats(120, Sound.get('b120'))\nsetBeats(150, Sound.get('b150'))\nsetBeats(180, Sound.get('b180'))\nsetBeats(240, Sound.get('b240'))\nsetBeats(300, Sound.get('b300'))\nstartAllBeats()\ngameInit=true\n"
                        }
                      },
                      {
                        "eval": {
                          "script": "setBeatVolume()\r\nstopAllBeats()"
                        }
                      },
                      {
                        "eval": {
                          "script": "// setBeatVolume()\r\n// stopAllBeats()\r\npages.goto('start')"
                        }
                      }
                    ]
                  }
                ]
              }
            }
          ],
          "elseCommands": [
            {
              "eval": {
                "script": ""
              }
            }
          ]
        }
      },
      {
        "noop": {
          "eval": {
            "script": "initializeGame()"
          }
        }
      },
      {
        "say": {
          "label": "<p>Now that I&#x27;m done with that...</p>",
          "mode": "instant"
        }
      },
      {
        "say": {
          "label": "<p>Hey there!</p>",
          "mode": "custom",
          "allowSkip": true,
          "duration": "3s"
        }
      },
      {
        "if": {
          "condition": "(!getValue('name'))",
          "commands": [
            {
              "goto": {
                "target": "prompt-name"
              }
            }
          ],
          "elseCommands": [
            {
              "goto": {
                "target": "welcome"
              }
            }
          ]
        }
      }
    ],
    "prompt-name": [
      {
        "eval": {
          "script": "resetSavedValues()\nsetValue('name','sweetie')"
        }
      },
      {
        "goto": {
          "target": "welcome"
        }
      }
    ],
    "welcome": [
      {
        "eval": {
          "script": "removeNotifications()\n\nif(!welcomeMessage) {\n  if (hasRecentAttitude()) {\n    welcomeMessage = ([\n      \"Back so soon?  Are you ready to be nice?\",\n      \"I'm still upset from last time.\",\n      \"Last time was disappointing.\",\n      \"You're back so soon?  Going to behave this time?\",\n      \"I see you're back.  Did you adjust your attitude?\"\n      ])[randomInt(0,4)]\n  } else if (getValue('firstVisit')) {\n    welcomeMessage = ([\n      \"Nice to see you!\",\n      \"Great to see you!\",\n      \"Looks like you're happy to see me!\",\n      ])[randomInt(0, 2)]\n  } else {\n    welcomeMessage = ([\n      \"Nice to see you again!\",\n      \"You're back!\",\n      \"Great to see you again!\",\n      \"Welcome back!\",\n      \"Looks like you're happy to see me again!\",\n      ])[randomInt(0, 3)]\n  }\n  \n}\n\nsetValue('newGame', false)\nsetValue('firstVisit', false)"
        }
      },
      {
        "if": {
          "condition": "hasRecentAttitude()",
          "commands": [
            {
              "image": {
                "locator": "gallery:6aee930c-2419-40e8-bef3-f029d847609f/970318"
              }
            }
          ],
          "elseCommands": [
            {
              "image": {
                "locator": "gallery:6aee930c-2419-40e8-bef3-f029d847609f/970320"
              }
            }
          ]
        }
      },
      {
        "say": {
          "label": "<p><eval>welcomeMessage</eval></p>",
          "mode": "autoplay",
          "allowSkip": true
        }
      },
      {
        "if": {
          "condition": "getValue('forcePage')",
          "commands": [
            {
              "image": {
                "locator": "gallery:6aee930c-2419-40e8-bef3-f029d847609f/970321"
              }
            },
            {
              "eval": {
                "script": "returnPage=pages.getCurrentPageId()\nwelcomeMessage=\"Okay \" + getValue('name') + \", let's try this again.\"\nif (getValue('forcePageReason')) {\n  punishMessage=\"You still need to make up for \" + getValue('forcePageReason') + \".\"\n} else {\n  punishMessage=\"You still have some work to do...\"\n}\npages.goto(getValue('forcePage'))\n"
              }
            }
          ]
        }
      },
      {
        "say": {
          "label": "<p>Do you want to play a game with me?</p>"
        }
      },
      {
        "choice": {
          "options": [
            {
              "label": "Sure, I'm up for a little fun.",
              "commands": [
                {
                  "goto": {
                    "target": "get-ready"
                  }
                }
              ]
            },
            {
              "label": "No, I'd rather you just start sucking my cock.",
              "commands": [
                {
                  "image": {
                    "locator": "gallery:6aee930c-2419-40e8-bef3-f029d847609f/970321"
                  }
                },
                {
                  "eval": {
                    "script": "returnPage = pages.getCurrentPageId()\nwelcomeMessage=\"Okay, let's move forward!\"\npunishReason=\"being rude\"\npages.goto('rude-punishOrEnd1')"
                  }
                }
              ]
            }
          ]
        }
      }
    ],
    "prompt-name-2": [
      {
        "say": {
          "label": "<p>Welcome back!</p>",
          "mode": "instant"
        }
      },
      {
        "choice": {
          "options": [
            {
              "label": "Yes, of course!",
              "commands": [
                {
                  "eval": {
                    "script": "setValue('gotNameWrong',false)"
                  }
                },
                {
                  "goto": {
                    "target": "welcome"
                  }
                }
              ]
            },
            {
              "label": "Sorry, not me.",
              "commands": [
                {
                  "say": {
                    "label": "<p>Sorry, it&#x27;s been one of those days...</p>",
                    "mode": "autoplay"
                  }
                },
                {
                  "eval": {
                    "script": "setValue('gotNameWrong',true)"
                  }
                },
                {
                  "goto": {
                    "target": "prompt-name"
                  }
                }
              ]
            }
          ]
        }
      }
    ],
    "rude-punishOrEnd1": [
      {
        "eval": {
          "script": "var thisCorePageId = pages.getCurrentPageId()\nvar runCount =  incPageRunCount(thisCorePageId)\nfunction clearThisRunCount() {\n  clearPageRunCount(thisCorePageId)\n}\nvar thisGameRunCount = getPageRunCountThisGame(thisCorePageId)\nconsole.log(thisCorePageId + ' Page run count:', runCount);\nvar firstRun = thisGameRunCount < 2\nvar forcePunish = thisGameRunCount <= 8 || runCount <= 8\nincAttitude(1); \nrudenessThisGame++;\npunishMessageLocal = randomString([\n  \"Why are you being such an asshole?\",\n  \"Typical response from someone like you, I guess.\",\n  \"Compensating for your little member?  Feel better now?\",\n  \"Wow, and I thought you were different from the others...\",\n  \"That's not a nice thing to say!\",\n  \"How rude!\",\n  \"You're such a little prick!\",\n  \"Do you think you're funny?\",\n  \"You think that's what you're here for?\",\n  \"Only in your dreams.\",\n  \"Why do you keep doing this to yourself?\",\n  \"You must be enjoying this.\",\n  \"What is wrong with you?\"\n  ], 0, firstRun ? 8 : undefined);\nif (punishMessage) {\n  punishMessageLocal = punishMessage\n  punishMessage = null\n}\nsetValue('forcePage', pages.getCurrentPageId()) // We're stuck here until we finish now\nif (punishReason !== null) setValue('forcePageReason', punishReason)\nremoveNotifications()\nconsole.log('Force Punish', forcePunish)"
        }
      },
      {
        "if": {
          "condition": "!punishMessageOnPunish",
          "commands": [
            {
              "say": {
                "label": "<p> <eval>punishMessageLocal</eval> </p>",
                "mode": "autoplay",
                "allowSkip": true
              }
            }
          ]
        }
      },
      {
        "if": {
          "condition": "forcePunish || randomInt(0,10)>0",
          "commands": [
            {
              "goto": {
                "target": "rude-punishOrEnd1-punish1"
              }
            }
          ],
          "elseCommands": [
            {
              "goto": {
                "target": "rude-punishOrEnd1-end1"
              }
            }
          ]
        }
      }
    ],
    "rude-punishOrEnd1-punish1": [
      {
        "eval": {
          "script": "initializeGame()\nvar fapsToDo = 70 + (10 * runCount)\nvar timerAmount = Math.round((fapsToDo / 5) * 1000)\nvar didImage=false\nvar cumInMouthChanceA = 20;\nvar cumInMouthChanceB = 1 // 1 in 10 chance\nif (runCount >= 3) {\n  cumInMouthChanceA = 6 // 1 in 6 chance\n}\nif (runCount >= 4) {\n  cumInMouthChanceB = 4 // 4 in 6 chance\n}\nif (runCount >= 8) {\n  cumInMouthChanceA = 8\n  cumInMouthChanceB = 6 // 6 in 8 chance\n}\nvar cumInMouth = forceCumInMouth || runCount > 3 && randomInt(1,cumInMouthChanceA) <= cumInMouthChanceB\nif (forceCumInMouth) forceCumInMouth = false\nif (!cumInMouth) inCEIPosition = false\nvar ii = 6 // 6 images states"
        }
      },
      {
        "if": {
          "condition": "cumInMouth && dickOut",
          "commands": [
            {
              "image": {
                "locator": "gallery:f0c7f265-d539-4b4a-9f92-a82d74a1a17c/*"
              }
            },
            {
              "eval": {
                "script": "didImage=true"
              }
            }
          ]
        }
      },
      {
        "if": {
          "condition": "!didImage&&runCount>=ii--",
          "commands": [
            {
              "image": {
                "locator": "gallery:9f4f07ff-6377-416b-8876-de10912f999f/*"
              }
            },
            {
              "eval": {
                "script": "didImage=true"
              }
            }
          ]
        }
      },
      {
        "if": {
          "condition": "!didImage&&runCount>=ii--",
          "commands": [
            {
              "image": {
                "locator": "gallery:6aee930c-2419-40e8-bef3-f029d847609f/970398"
              }
            },
            {
              "eval": {
                "script": "didImage=true"
              }
            }
          ]
        }
      },
      {
        "if": {
          "condition": "!didImage&&runCount>=ii--",
          "commands": [
            {
              "image": {
                "locator": "gallery:6aee930c-2419-40e8-bef3-f029d847609f/970369"
              }
            },
            {
              "eval": {
                "script": "didImage=true"
              }
            }
          ]
        }
      },
      {
        "if": {
          "condition": "!didImage&&runCount>=ii--",
          "commands": [
            {
              "image": {
                "locator": "gallery:6aee930c-2419-40e8-bef3-f029d847609f/970377"
              }
            },
            {
              "eval": {
                "script": "didImage=true"
              }
            }
          ]
        }
      },
      {
        "if": {
          "condition": "false&&!didImage&&runCount>=ii--",
          "commands": [
            {
              "image": {
                "locator": "gallery:6aee930c-2419-40e8-bef3-f029d847609f/970412"
              }
            },
            {
              "eval": {
                "script": "didImage=true"
              }
            }
          ]
        }
      },
      {
        "if": {
          "condition": "!didImage&&runCount>=ii--",
          "commands": [
            {
              "image": {
                "locator": "gallery:6aee930c-2419-40e8-bef3-f029d847609f/970330"
              }
            },
            {
              "eval": {
                "script": "didImage=true"
              }
            }
          ]
        }
      },
      {
        "if": {
          "condition": "!didImage&&runCount>=ii--",
          "commands": [
            {
              "image": {
                "locator": "gallery:6aee930c-2419-40e8-bef3-f029d847609f/970323"
              }
            },
            {
              "eval": {
                "script": "didImage=true"
              }
            }
          ]
        }
      },
      {
        "if": {
          "condition": "!didImage",
          "commands": [
            {
              "image": {
                "locator": "gallery:6aee930c-2419-40e8-bef3-f029d847609f/970321"
              }
            },
            {
              "eval": {
                "script": "didImage=true"
              }
            }
          ]
        }
      },
      {
        "if": {
          "condition": "punishMessageOnPunish",
          "commands": [
            {
              "say": {
                "label": "<p> <eval>punishMessageLocal</eval> </p>",
                "mode": "custom",
                "allowSkip": true,
                "duration": "0.5s"
              }
            },
            {
              "eval": {
                "script": "punishMessageOnPunish = false;"
              }
            }
          ]
        }
      },
      {
        "if": {
          "condition": "!dickOut",
          "commands": [
            {
              "say": {
                "label": "<p>Pull your dick out and get ready to stroke.</p>",
                "mode": "pause"
              }
            },
            {
              "eval": {
                "script": "if (cumInMouth) {\r\n  dickOut=true\r\n  forceCumInMouth=true // keep punishment for next loop\r\n  pages.goto(pages.getCurrentPageId())\r\n}"
              }
            }
          ],
          "elseCommands": [
            {
              "if": {
                "condition": "!cumInMouth",
                "commands": [
                  {
                    "eval": {
                      "script": "var dickOutText=randomString([\r\n  \"Grab your prick and get ready.\",\r\n  \"Keep that dick out.\",\r\n  \"Keep your dick out.\"\r\n  ])"
                    }
                  },
                  {
                    "noop": {
                      "say": {
                        "label": "<p><eval>dickOutText</eval></p>",
                        "mode": "custom",
                        "allowSkip": true,
                        "duration": "1s"
                      }
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "if": {
          "condition": "cumInMouth",
          "commands": [
            {
              "eval": {
                "script": "var ceiPrompt;\r\nif (didCEIPosition) {\r\n  ceiPrompt=randomString([\r\n    \"Again, on your back with your ass above your head, like me.</p>\"\r\n      +\"<p>Point your flute at your mouth.</p>\"\r\n      +\"<p><b>Lips wide open!</b>\",\r\n    \"Get your ass back above your head, just like me.</p>\"\r\n      +\"<p>You know where to point it!</p>\"\r\n      +\"<p><b>Don't close your mouth!</b>\",\r\n    \"You know the position.  Ass up, head down, just like me.</p>\"\r\n      +\"<p>Keep your dick pointed at your mouth.</p>\"\r\n      +\"<p><b>Open wide!</b>\",\r\n    \"Back to the position. Ass up, head down.</p>\"\r\n      +\"<p>Take careful aim at your mouth.</p>\"\r\n      +\"<p><b>Tongue out, open wide!</b>\"\r\n  ])\r\n} else {\r\n  ceiPrompt=randomString([\r\n    \"Lay on your back and get your ass above your head, like me.</p>\"\r\n      +\"<p>Point your knob directly at your mouth.</p>\"\r\n      +\"<p><b>Keep your mouth wide open!</b>\",\r\n    \"Get on your back and slide your ass above your head, like me.</p>\"\r\n      +\"<p>Point your knob directly at your mouth.</p>\"\r\n      +\"<p><b>Keep your mouth wide open!</b>\"\r\n  ])\r\n}\r\n\r\n\r\n\r\n\r\n"
              }
            },
            {
              "say": {
                "label": "<p><strong></strong><eval>ceiPrompt</eval></p>",
                "mode": "autoplay",
                "allowSkip": true
              }
            }
          ]
        }
      },
      {
        "eval": {
          "script": "dickOut=true\r\nif (cumInMouth) {\r\n  inCEIPosition = true\r\n  didCEIPosition = true\r\n}"
        }
      },
      {
        "say": {
          "label": "<p>Stroke it <eval>fapsToDo</eval> times, before the timer runs out.</p><p>Then maybe I&#39;ll forgive you.</p>",
          "mode": "instant"
        }
      },
      {
        "timer": {
          "duration": "1s",
          "style": "hidden"
        }
      },
      {
        "eval": {
          "script": "startBeat(300)"
        }
      },
      {
        "if": {
          "condition": "true",
          "commands": [
            {
              "notification.create": {
                "buttonCommands": [
                  {
                    "eval": {
                      "script": "stopBeat(300)\nincFap(fapsToDo)"
                    }
                  },
                  {
                    "goto": {
                      "target": "rude-punishOrEnd1-end3"
                    }
                  }
                ],
                "buttonLabel": "✴ Cumming ✴",
                "id": "cum-punish"
              }
            }
          ]
        }
      },
      {
        "timer": {
          "duration": "$timerAmount",
          "isAsync": true,
          "commands": [
            {
              "notification.remove": {
                "id": "cum-punish"
              }
            },
            {
              "eval": {
                "script": "stopBeat(300)\nincFap(fapsToDo)"
              }
            },
            {
              "say": {
                "label": "<p>Are you ready to apologize?</p>",
                "mode": "instant"
              }
            },
            {
              "timer": {
                "duration": "3s",
                "isAsync": true,
                "commands": [
                  {
                    "eval": {
                      "script": "punishMessage = randomString([\n  \"It shouldn't take that long to decide!\",\n  \"Is it that hard to know if you're sorry?\",\n  \"If it takes you that long to say, I can only assume you're not sorry!\",\n  \"I don't have all day for you to decide!\"\n  ])\npunishMessageOnPunish = true\npages.goto('rude-punishOrEnd1')"
                    }
                  }
                ]
              }
            },
            {
              "choice": {
                "options": [
                  {
                    "label": "Yes, I'm sorry!",
                    "commands": [
                      {
                        "eval": {
                          "script": "setAttitude(0); // forgive\nsetValue('forcePage', null) // We don't need to come back\nsetValue('forcePageReason', null)\nclearThisRunCount()\npages.goto(returnPage)"
                        }
                      }
                    ]
                  },
                  {
                    "label": "Yes, but I came!",
                    "commands": [
                      {
                        "goto": {
                          "target": "rude-punishOrEnd1-end2"
                        }
                      }
                    ]
                  },
                  {
                    "label": "No. Suck my cock.",
                    "commands": [
                      {
                        "eval": {
                          "script": "setValue('forcePageReason', \"continuing to be rude\")\npages.goto('rude-punishOrEnd1')"
                        }
                      }
                    ]
                  }
                ]
              }
            }
          ],
          "style": "normal"
        }
      },
      {
        "eval": {
          "script": "var punishmentText;\nif (cumPunishment) {\n  punishmentText = cumPunishment\n  cumPunishment = null\n} else if (cumInMouth) {\n  punishmentText=randomString([\n  \"If you do, you'll need to ruin every drop into your mouth, then swallow!\",\n  \"If you do, give yourself a facial, and swallow what gets in your mouth!\",\n  \"If you do, you'll need to shoot every drop into your mouth!\",\n  \"If you do, shoot it in your mouth and lick up any that misses!\"\n  ])\n} else {\n  punishmentText=randomString([\n  \"If you do, you'll need to ruin it in your hand, then lick it clean!\",\n  \"If you do, you'll need to ruin it in your hand, then taste it!\",\n  \"If you do, you'll need to ruin it in your hand, then smear it somewhere naughty.\",\n  \"If you do, shoot it in your hand, then smear some on your lips and lick them!\",\n  \"If you do, shoot it at your open mouth, and try to catch it with your tongue.\"\n  ])\n}"
        }
      },
      {
        "timer": {
          "duration": "1s",
          "style": "hidden"
        }
      },
      {
        "say": {
          "label": "<p>And don&#x27;t you dare cum!</p><p><strong></strong><strong><eval>punishmentText</eval></strong><strong></strong></p>",
          "mode": "instant"
        }
      }
    ],
    "rude-punishOrEnd1-end1": [
      {
        "image": {
          "locator": "gallery:6aee930c-2419-40e8-bef3-f029d847609f/970361"
        }
      },
      {
        "say": {
          "label": "<p>You know what...</p>",
          "mode": "autoplay",
          "allowSkip": true
        }
      },
      {
        "eval": {
          "script": "var endMessage = ([\n  \"Come back when you're ready to play nice.\",\n  \"Think about what you've done, then try again.\",\n  \"After you've already come?  Let's see what happens next time.\",\n  \"You need help.  Give me some time to think about how to handle you.\"\n  ])[randomInt(0,3)]"
        }
      },
      {
        "say": {
          "label": "<p><eval>endMessage</eval></p>",
          "mode": "autoplay",
          "allowSkip": true
        }
      },
      {
        "noop": {
          "say": {
            "label": "<p>Come back after you&#x27;ve thought about your actions.</p>",
            "mode": "autoplay",
            "allowSkip": true
          }
        }
      },
      {
        "end": {}
      }
    ],
    "rude-punishOrEnd1-end2": [
      {
        "eval": {
          "script": "incCum(1)\nclearThisRunCount()\ninCEIPosition = false\ndidCEIPosition = false"
        }
      },
      {
        "say": {
          "label": "<p>That&#x27;s okay, <eval>getValue(&#x27;name&#x27;)</eval>.</p>",
          "mode": "instant"
        }
      },
      {
        "if": {
          "condition": "cumInMouth",
          "commands": [
            {
              "say": {
                "label": "<p>Did you do cum in your mouth, like I asked?</p>",
                "mode": "instant"
              }
            }
          ],
          "elseCommands": [
            {
              "say": {
                "label": "<p>Did you do everything I asked?</p>",
                "mode": "instant"
              }
            }
          ]
        }
      },
      {
        "choice": {
          "options": [
            {
              "label": "Yes. I did as I was told!",
              "commands": [
                {
                  "eval": {
                    "script": "setAttitude(0); // forgive\nsetValue('forcePage', null) // We don't need to come back\nsetValue('forcePageReason', null)"
                  }
                },
                {
                  "say": {
                    "label": "<p>I&#x27;m so proud of you!</p>",
                    "mode": "autoplay",
                    "allowSkip": true
                  }
                },
                {
                  "say": {
                    "label": "<p>Would you like to continue?</p>",
                    "mode": "instant"
                  }
                },
                {
                  "choice": {
                    "options": [
                      {
                        "label": "Yes, please! I'm so sorry!",
                        "commands": [
                          {
                            "eval": {
                              "script": "pages.goto(returnPage)"
                            }
                          }
                        ]
                      },
                      {
                        "label": "No, I need time to recover.",
                        "commands": [
                          {
                            "say": {
                              "label": "<p>I understand.  I hope I wasn&#x27;t too hard on you.</p>",
                              "mode": "autoplay",
                              "allowSkip": true
                            }
                          },
                          {
                            "say": {
                              "label": "<p>Hope to see you back soon!</p>",
                              "mode": "autoplay",
                              "allowSkip": true
                            }
                          },
                          {
                            "end": {}
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            {
              "label": "No, I couldn't do it!",
              "commands": [
                {
                  "eval": {
                    "script": "setAttitude(0); // forgive\n// But we will have to come back\nsetValue('forcePageReason', \"not following instructions\")"
                  }
                },
                {
                  "say": {
                    "label": "<p>That makes me sad.</p><p>You need to follow my instructions!</p><p>You can try to redeem yourself next time.</p>",
                    "mode": "autoplay"
                  }
                },
                {
                  "end": {}
                }
              ]
            }
          ]
        }
      },
      {
        "end": {}
      }
    ],
    "get-ready": [
      {
        "image": {
          "locator": "gallery:6aee930c-2419-40e8-bef3-f029d847609f/970322"
        }
      },
      {
        "if": {
          "condition": "hasValidGameInProgress()",
          "commands": [
            {
              "say": {
                "label": "<p>We didn&#x27;t finish our last game.</p>",
                "mode": "instant"
              }
            },
            {
              "say": {
                "label": "<p>Should we continue from where we were, or start over?</p>",
                "mode": "instant"
              }
            },
            {
              "choice": {
                "options": [
                  {
                    "label": "Coninue.",
                    "commands": [
                      {
                        "eval": {
                          "script": "setGameProgress(getLastGameProgress())"
                        }
                      }
                    ]
                  },
                  {
                    "label": "Start over.",
                    "commands": [
                      {
                        "eval": {
                          "script": "endGame()\npages.goto(pages.getCurrentPageId())"
                        }
                      }
                    ]
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "say": {
          "label": "<p>Okay! Let&#x27;s get started!</p>",
          "mode": "autoplay",
          "allowSkip": true
        }
      },
      {
        "say": {
          "label": "<p><strong>The rules are simple:</strong></p><p>1. Answer my questions.</p><p>2. Stroke to beat.</p><p>3. Don&#x27;t cum until I say,  or you lose!</p>",
          "mode": "autoplay",
          "allowSkip": true
        }
      },
      {
        "say": {
          "label": "<p><strong>Get you dick out and be ready to stroke!</strong></p>",
          "mode": "pause"
        }
      },
      {
        "eval": {
          "script": "setGameProgress(1)"
        }
      }
    ],
    "guess-number": [
      {
        "eval": {
          "script": "var guessStart, guessEnd, myNumber; \nguessStart = lastGuessNumberStart\nguessEnd = lastGuessNumberEnd\nmyNumber = lastMyNumber\nvar triesLeft = (guessEnd - guessStart) - (lastGuesses.length + 1)\nif (!useLastGuessNumber || lastGamePage !== currentGamePage /*|| !triesLeft*/) {\n  guessStart = randomInt(guessNumberStartRange[0], guessNumberStartRange[1])\n  guessEnd = randomInt(Math.max(guessNumberEndRange[0], guessStart + 2), guessNumberEndRange[1])\n  myNumber = randomInt(guessStart, guessEnd)\n  lastGuessNumberStart = guessStart\n  lastGuessNumberEnd = guessEnd\n  lastMyNumber = myNumber\n  lastGuesses = []\n} else {\n  guessStart = lastGuessNumberStart\n  guessEnd = lastGuessNumberEnd\n  myNumber = lastMyNumber\n}\nvar triesLeft = 1 // force retries\nlastGamePage = currentGamePage\n\nvar fapTime, bpm;\n\nvar bpmList = [180, 240];\n\nif (currentGameProgress > 2) {\n    bpmList = [180, 240, 300]\n}\nif (currentGameProgress > 6) {\n    bpmList = [240, 300]\n}\nif (currentGameProgress > 11) {\n    bpmList = [300]\n}\nbpm = bpmList[randomInt(0, bpmList.length - 1)]\n\nsetButtonSelectorOptions(\n  randomInt(5, 10) * 1000, \n  function() {\n    processRound(\"--\", false, false, false, false, 1, \"Sorry, time's up!\")\n  }, \n  bpm, \n  false, \n  false\n  )\n  \naddButtonSelectorMessage(\n  \"I'm thinking of a number between \" + guessStart + \" and \" + guessEnd,\n  'instant'\n  )\n  \naddButtonSelectorMessage(\n  \"Can you guess what it is?\",\n  'instant'\n  )\n\nfunction _onSelection (b, i) {\n  var guess = b.value\n  var isIdiot = guess < guessStart || guess > guessEnd\n  var filteredUserGuess = guess + ''\n  var isDuplicate = arrayContains(lastGuesses, filteredUserGuess)\n  lastGuesses.push(filteredUserGuess)\n  processRound(\n    guess, \n    guess === myNumber, \n    isIdiot, \n    isDuplicate, \n    false, \n    1\n    )\n  useLastGuessNumber=false\n}\n\nfor (var i = guessStart, l = guessEnd; i <= l; i++) {\n  addButtonSelectorButton(i, i, _onSelection)\n}\n\nloadNumberSelector()"
        }
      }
    ],
    "game-image1": [
      {
        "image": {
          "locator": "gallery:6aee930c-2419-40e8-bef3-f029d847609f/970322"
        }
      },
      {
        "eval": {
          "script": "returnFromGameImageLoad()"
        }
      }
    ],
    "game-progress": [
      {
        "eval": {
          "script": "currentGameImagePage = 'game-image' + currentGameProgress\ninitializeGame()\nloadGameImageIfNeeded()\ndickOut=true\nlastGamePage = currentGamePage\nsetValue('lastGameProgress', currentGameProgress)\nsetValue('lastGameActivity', Date.now())\nswitch (currentGameProgress) {\n  \n  // case 2:\n  //   setGameProgress(15)\n  //   break;\n  \n  case 15:\n    currentGamePage = 'game-climax'\n    break;\n    \n  default:\n    // currentGamePage = 'fast-math'\n    // currentGamePage = 'guess-number'\n    currentGamePage = randomInt(0,1) ? 'guess-number' : 'fast-math'\n}\nif (currentGamePage) pages.goto(currentGamePage)"
        }
      }
    ],
    "answer-correct": [
      {
        "eval": {
          "script": "loadGameImageIfNeeded()"
        }
      },
      {
        "say": {
          "label": "<p><eval>roundMessage</eval></p>",
          "mode": "instant"
        }
      },
      {
        "timer": {
          "duration": "5s",
          "isAsync": true,
          "commands": [
            {
              "eval": {
                "script": "incGameProgress()"
              }
            }
          ]
        }
      },
      {
        "choice": {
          "options": [
            {
              "label": "I'm ready to continue!",
              "commands": [
                {
                  "eval": {
                    "script": "incGameProgress()"
                  }
                }
              ]
            },
            {
              "label": "I came.",
              "commands": [
                {
                  "goto": {
                    "target": "game-failed"
                  }
                }
              ]
            },
            {
              "label": "Suck me?",
              "commands": [
                {
                  "eval": {
                    "script": "roundMessage=\"Okay, let's get back to it!\"\ntakeOffenseInRound()"
                  }
                }
              ]
            }
          ]
        }
      }
    ],
    "game-image2": [
      {
        "image": {
          "locator": "gallery:6aee930c-2419-40e8-bef3-f029d847609f/970325"
        }
      },
      {
        "eval": {
          "script": "returnFromGameImageLoad()"
        }
      }
    ],
    "game-image5": [
      {
        "image": {
          "locator": "gallery:6aee930c-2419-40e8-bef3-f029d847609f/970326"
        }
      },
      {
        "eval": {
          "script": "returnFromGameImageLoad()"
        }
      }
    ],
    "game-image4": [
      {
        "image": {
          "locator": "gallery:6aee930c-2419-40e8-bef3-f029d847609f/970334"
        }
      },
      {
        "eval": {
          "script": "returnFromGameImageLoad()"
        }
      }
    ],
    "game-image3": [
      {
        "image": {
          "locator": "gallery:6aee930c-2419-40e8-bef3-f029d847609f/970328"
        }
      },
      {
        "eval": {
          "script": "returnFromGameImageLoad()"
        }
      }
    ],
    "game-image6": [
      {
        "image": {
          "locator": "gallery:6aee930c-2419-40e8-bef3-f029d847609f/970340"
        }
      },
      {
        "eval": {
          "script": "returnFromGameImageLoad()"
        }
      }
    ],
    "game-image7": [
      {
        "image": {
          "locator": "gallery:6aee930c-2419-40e8-bef3-f029d847609f/970370"
        }
      },
      {
        "eval": {
          "script": "returnFromGameImageLoad()"
        }
      }
    ],
    "game-image8": [
      {
        "image": {
          "locator": "gallery:6aee930c-2419-40e8-bef3-f029d847609f/970385"
        }
      },
      {
        "eval": {
          "script": "returnFromGameImageLoad()"
        }
      }
    ],
    "game-image9": [
      {
        "image": {
          "locator": "gallery:ef5262c0-02e6-46d9-93d9-61e26ba9b24a/971273"
        }
      },
      {
        "eval": {
          "script": "returnFromGameImageLoad()"
        }
      }
    ],
    "game-image10": [
      {
        "image": {
          "locator": "gallery:ef5262c0-02e6-46d9-93d9-61e26ba9b24a/971275"
        }
      },
      {
        "eval": {
          "script": "returnFromGameImageLoad()"
        }
      }
    ],
    "game-image14": [
      {
        "image": {
          "locator": "gallery:ef5262c0-02e6-46d9-93d9-61e26ba9b24a/971165"
        }
      },
      {
        "eval": {
          "script": "returnFromGameImageLoad()"
        }
      }
    ],
    "game-climax": [
      {
        "eval": {
          "script": "loadGameImageIfNeeded()\n\nif (rudenessThisGame > 1) {\n  pages.goto('game-climax-prompt')\n}"
        }
      },
      {
        "if": {
          "condition": "guessWelcomeMessage",
          "commands": [
            {
              "say": {
                "label": "<p><eval>guessWelcomeMessage</eval></p>",
                "mode": "autoplay",
                "allowSkip": true
              }
            },
            {
              "eval": {
                "script": "guessWelcomeMessage = null"
              }
            }
          ]
        }
      },
      {
        "say": {
          "label": "<p>Okay <eval>values.name</eval>, here&#x27;s your chance!</p>",
          "mode": "autoplay",
          "allowSkip": true
        }
      },
      {
        "say": {
          "label": "<p>Stroke to the beat. </p><p><strong>Cum before time is up!</strong></p>",
          "mode": "instant"
        }
      },
      {
        "eval": {
          "script": "startBeat(120)"
        }
      },
      {
        "timer": {
          "duration": "45s",
          "isAsync": true,
          "commands": [
            {
              "eval": {
                "script": "stopAllBeats()"
              }
            },
            {
              "goto": {
                "target": "game-climax-finish"
              }
            }
          ],
          "style": "normal"
        }
      },
      {
        "timer": {
          "duration": "15s",
          "isAsync": true,
          "commands": [
            {
              "eval": {
                "script": "stopBeat(120)\nstartBeat(180)"
              }
            },
            {
              "timer": {
                "duration": "15s",
                "isAsync": true,
                "commands": [
                  {
                    "eval": {
                      "script": "stopBeat(180)\nstartBeat(300)"
                    }
                  }
                ],
                "style": "hidden"
              }
            }
          ],
          "style": "hidden"
        }
      }
    ],
    "answer-payment-finish": [
      {
        "eval": {
          "script": "loadGameImageIfNeeded()"
        }
      },
      {
        "timer": {
          "duration": "5s",
          "isAsync": true,
          "commands": [
            {
              "eval": {
                "script": "onAnswerPaymentComplete()"
              }
            }
          ]
        }
      },
      {
        "if": {
          "condition": "guessWelcomeMessage",
          "commands": [
            {
              "say": {
                "label": "<p><eval>guessWelcomeMessage</eval></p>",
                "mode": "autoplay"
              }
            },
            {
              "eval": {
                "script": "guessWelcomeMessage=null"
              }
            }
          ]
        }
      },
      {
        "say": {
          "label": "<p>Did you cum yet?</p>",
          "mode": "instant"
        }
      },
      {
        "choice": {
          "options": [
            {
              "label": "No!",
              "commands": [
                {
                  "eval": {
                    "script": "onAnswerPaymentComplete()"
                  }
                }
              ]
            },
            {
              "label": "Yes!",
              "commands": [
                {
                  "goto": {
                    "target": "game-failed"
                  }
                }
              ]
            },
            {
              "label": "Suck me and find out.",
              "commands": [
                {
                  "eval": {
                    "script": "guessWelcomeMessage=\"Let's behave this time, okay?\"\ntakeOffenseInRound()"
                  }
                }
              ]
            }
          ]
        }
      }
    ],
    "game-failed": [
      {
        "eval": {
          "script": "endGame()"
        }
      },
      {
        "say": {
          "label": "<p>Oh no!  You lost!</p>",
          "mode": "instant"
        }
      },
      {
        "say": {
          "label": "<p>Would you like to play again?</p>",
          "mode": "instant"
        }
      },
      {
        "choice": {
          "options": [
            {
              "label": "Yes!",
              "commands": [
                {
                  "eval": {
                    "script": "setGameProgress(1)"
                  }
                }
              ]
            },
            {
              "label": "Not now.",
              "commands": [
                {
                  "say": {
                    "label": "<p>I understand.</p>",
                    "mode": "instant"
                  }
                },
                {
                  "say": {
                    "label": "<p>Hope you come back soon!</p>",
                    "mode": "autoplay"
                  }
                },
                {
                  "end": {}
                }
              ]
            }
          ]
        }
      }
    ],
    "game-climax-win": [
      {
        "image": {
          "locator": "gallery:ef5262c0-02e6-46d9-93d9-61e26ba9b24a/971196"
        }
      },
      {
        "say": {
          "label": "<p>Yay!  You won!</p>",
          "mode": "instant"
        }
      },
      {
        "say": {
          "label": "<p>I&#x27;m so happy for you!</p>",
          "mode": "autoplay"
        }
      },
      {
        "say": {
          "label": "<p>I hope you had a good time!  Please come back and play again!!</p>",
          "mode": "autoplay"
        }
      },
      {
        "end": {}
      }
    ],
    "game-climax-fail": [
      {
        "image": {
          "locator": "gallery:ef5262c0-02e6-46d9-93d9-61e26ba9b24a/971182"
        }
      },
      {
        "say": {
          "label": "<p>Aw.  I&#x27;m sorry.</p>",
          "mode": "instant"
        }
      },
      {
        "say": {
          "label": "<p>You were so close!</p>",
          "mode": "autoplay"
        }
      },
      {
        "say": {
          "label": "<p>I hope you&#x27;ll try again soon!</p>",
          "mode": "autoplay"
        }
      },
      {
        "end": {}
      }
    ],
    "answer-wrong-has-retries": [
      {
        "eval": {
          "script": "onAnswerPaymentComplete = function () {\n  useLastGuessNumber=true\n  pages.goto(currentGamePage)\n}\nuseLastGuessNumber=true\nnumberOfFaps = randomInt(30,60)\nvar indexStart = 2;\nif (currentGameProgress > 2) {\n  numberOfFaps = randomInt(40,70)\n  indexStart = 2;\n}\nif (currentGameProgress > 5) {\n  numberOfFaps = randomInt(50,80)\n  indexStart = 3;\n}\nif (currentGameProgress > 11) {\n  numberOfFaps = randomInt(60,90)\n  indexStart = 4;\n}\nbpmIndex = randomInt(indexStart,4)\n// roundMessage = \"Take your penalty, then try again...\"\npages.goto('answer-payment')"
        }
      }
    ],
    "answer-payment": [
      {
        "eval": {
          "script": "loadGameImageIfNeeded()"
        }
      },
      {
        "if": {
          "condition": "roundMessage",
          "commands": [
            {
              "say": {
                "label": "<p><eval>roundMessage</eval></p>",
                "mode": "custom",
                "allowSkip": true,
                "duration": "1s"
              }
            }
          ]
        }
      },
      {
        "eval": {
          "script": "var bpmList = [\n  120,\n  150,\n  180,\n  240,\n  300\n  ]\n\nvar bpms = bpmList[bpmIndex]\nvar fapTime = Math.round((numberOfFaps / (bpms / 60)) * 1000)\nconsole.log('payment', bpms, numberOfFaps, fapTime)"
        }
      },
      {
        "say": {
          "label": "<p>Stroke <eval>numberOfFaps</eval> times before the timer runs out!</p>",
          "mode": "instant"
        }
      },
      {
        "eval": {
          "script": "startBeat(bpms)"
        }
      },
      {
        "timer": {
          "duration": "$fapTime",
          "isAsync": true,
          "commands": [
            {
              "eval": {
                "script": "stopBeat(bpms)"
              }
            },
            {
              "goto": {
                "target": "answer-payment-finish"
              }
            }
          ]
        }
      }
    ],
    "answer-wrong-no-retries": [
      {
        "eval": {
          "script": "onAnswerPaymentComplete = function () {\n  incGameProgress()\n}\nnumberOfFaps = randomInt(40,100)\nbpmIndex = randomInt(1,4)\n// roundMessage = \"You'll need to pay to move on.\"\npages.goto('answer-payment')"
        }
      }
    ],
    "fast-math": [
      {
        "eval": {
          "script": "\r\nvar lastSetting; \r\nif (!useLastGuessNumber || lastGamePage !== currentGamePage) {\r\n  var myNumber, guessStart, guessEnd, formula;\r\n  var subtract = randomInt(0,1)\r\n  guessStart = randomInt(3, 50)\r\n  guessEnd = randomInt(3, 50)\r\n  myNumber = subtract ? guessStart - guessEnd : guessStart + guessEnd\r\n  myNumberWrong = !subtract ? guessStart - guessEnd : guessStart + guessEnd\r\n  if (!subtract && myNumberWrong < 0) myNumberWrong = guessEnd - guessStart\r\n  while (myNumber < 0 || myNumber > 99 || myNumberWrong < 0 || myNumberWrong > 99) {\r\n    guessStart = randomInt(3, 50)\r\n    guessEnd = randomInt(3, 50)\r\n    myNumber = subtract ? guessStart - guessEnd : guessStart + guessEnd\r\n    myNumberWrong = !subtract ? guessStart - guessEnd : guessStart + guessEnd\r\n    if (!subtract && myNumberWrong < 0) myNumberWrong = guessEnd - guessStart\r\n  }\r\n  var answers = []\r\n  var usedNumbers = {}\r\n  usedNumbers[myNumber] = true;\r\n  usedNumbers[myNumberWrong] = true;\r\n  var badNumberStart = Math.max(0, myNumberWrong - 20)\r\n  var badNumberEnd = badNumberStart + 40\r\n  if (badNumberEnd > 99) {\r\n    badNumberEnd = 99;\r\n  }\r\n  while (answers.length < 2) {\r\n    var badNumber = randomInt(badNumberStart, badNumberEnd)\r\n    while(usedNumbers[badNumber]) {\r\n      badNumber = randomInt(badNumberStart, badNumberEnd)\r\n    }\r\n    usedNumbers[badNumber] = true;\r\n    answers.push(badNumber);\r\n  }\r\n  badNumberStart = Math.max(0, myNumber - 20)\r\n  badNumberEnd = badNumberStart + 40\r\n  if (badNumberEnd > 99) {\r\n    badNumberEnd = 99;\r\n  }\r\n  while (answers.length < 4) {\r\n    var badNumber = randomInt(badNumberStart, badNumberEnd)\r\n    while(usedNumbers[badNumber]) {\r\n      badNumber = randomInt(badNumberStart, badNumberEnd)\r\n    }\r\n    usedNumbers[badNumber] = true;\r\n    answers.push(badNumber);\r\n  }\r\n  // badNumberStart = myNumber < myNumberWrong ? myNumber : myNumberWrong\r\n  // badNumberEnd = myNumber > myNumberWrong ? myNumber : myNumberWrong\r\n  while (answers.length < 7) {\r\n    var badNumber = randomInt(0, 99)\r\n    while(usedNumbers[badNumber]) {\r\n      badNumber = randomInt(0, 99)\r\n    }\r\n    usedNumbers[badNumber] = true;\r\n    answers.push(badNumber);\r\n  }\r\n  answers.push(myNumberWrong)\r\n  answers.push(myNumber)\r\n  formula = guessStart + (subtract ? \" - \" : \" + \") + guessEnd\r\n  lastSetting = {\r\n    myNumber: myNumber,\r\n    formula: formula,\r\n    answers: answers\r\n  }\r\n  \r\n  lastMyNumber = lastSetting\r\n  lastGuesses = []\r\n} else {\r\n  lastSetting = lastMyNumber\r\n}\r\n\r\nvar triesLeft = 1 // force retries\r\nlastGamePage = currentGamePage\r\n\r\nvar fapTime, bpm;\r\nvar bpmList = [180, 240];\r\n\r\nif (currentGameProgress > 2) {\r\n    bpmList = [180, 240, 300]\r\n}\r\nif (currentGameProgress > 6) {\r\n    bpmList = [240, 300]\r\n}\r\nif (currentGameProgress > 11) {\r\n    bpmList = [300]\r\n}\r\nbpm = bpmList[randomInt(0, bpmList.length - 1)]\r\n\r\nsetButtonSelectorOptions(\r\n  randomInt(5, 10) * 1000, \r\n  function() {\r\n    processRound(\"--\", false, false, false, false, 1, \"Sorry, time's up!\")\r\n  }, \r\n  bpm, \r\n  false, \r\n  false\r\n  )\r\n  \r\naddButtonSelectorMessage(\r\n  \"What is \" + lastSetting.formula,\r\n  'instant'\r\n  )\r\n\r\n\r\nfunction _onSelection (b, i) {\r\n  var guess = b.value\r\n  var isIdiot = guess < guessStart || guess > guessEnd\r\n  var filteredUserGuess = guess + ''\r\n  var isDuplicate = arrayContains(lastGuesses, filteredUserGuess)\r\n  lastGuesses.push(filteredUserGuess)\r\n  processRound(\r\n    guess, \r\n    guess === lastSetting.myNumber, \r\n    isIdiot, \r\n    isDuplicate, \r\n    false, \r\n    1\r\n    )\r\n  useLastGuessNumber=false\r\n}\r\n\r\nfor (var k in lastSetting.answers) {\r\n  addButtonSelectorButton(lastSetting.answers[k], lastSetting.answers[k], _onSelection)\r\n}\r\n\r\nloadNumberSelector()\r\n"
        }
      }
    ],
    "game-image15": [
      {
        "image": {
          "locator": "gallery:ef5262c0-02e6-46d9-93d9-61e26ba9b24a/971221"
        }
      },
      {
        "eval": {
          "script": "returnFromGameImageLoad()"
        }
      }
    ],
    "game-image11": [
      {
        "image": {
          "locator": "gallery:ef5262c0-02e6-46d9-93d9-61e26ba9b24a/971215"
        }
      },
      {
        "eval": {
          "script": "returnFromGameImageLoad()"
        }
      }
    ],
    "game-image12": [
      {
        "image": {
          "locator": "gallery:ef5262c0-02e6-46d9-93d9-61e26ba9b24a/971191"
        }
      },
      {
        "eval": {
          "script": "returnFromGameImageLoad()"
        }
      }
    ],
    "game-image13": [
      {
        "image": {
          "locator": "gallery:ef5262c0-02e6-46d9-93d9-61e26ba9b24a/971158"
        }
      },
      {
        "eval": {
          "script": "returnFromGameImageLoad()"
        }
      }
    ],
    "game-climax-alternate": [
      {
        "eval": {
          "script": "var guessStart, guessEnd, myNumber; \nif (!useLastGuessNumber) {\n  guessStart = randomInt(guessNumberStartRange[0], guessNumberStartRange[1])\n  guessEnd = randomInt(Math.max(guessNumberEndRange[0], guessStart + 2), guessNumberEndRange[1])\n  myNumber = randomInt(guessStart, guessEnd)\n  lastGuessNumberStart = guessStart\n  lastGuessNumberEnd = guessEnd\n  lastMyNumber = myNumber\n  lastGuesses = []\n} else {\n  guessStart = lastGuessNumberStart\n  guessEnd = lastGuessNumberEnd\n  myNumber = lastMyNumber\n}\nvar triesLeft = (guessEnd - guessStart) - lastGuesses.length"
        }
      },
      {
        "if": {
          "condition": "guessWelcomeMessage",
          "commands": [
            {
              "say": {
                "label": "<p><eval>guessWelcomeMessage</eval></p>",
                "mode": "autoplay",
                "allowSkip": true
              }
            },
            {
              "eval": {
                "script": "guessWelcomeMessage = null"
              }
            }
          ]
        }
      },
      {
        "if": {
          "condition": "altEndingImage==1",
          "commands": [
            {
              "image": {
                "locator": "gallery:ef5262c0-02e6-46d9-93d9-61e26ba9b24a/971156"
              }
            }
          ]
        }
      },
      {
        "if": {
          "condition": "altEndingImage===0",
          "commands": [
            {
              "image": {
                "locator": "gallery:f0c7f265-d539-4b4a-9f92-a82d74a1a17c/970583"
              }
            }
          ]
        }
      },
      {
        "say": {
          "label": "<p>Swing your legs over your head, just like me. </p><p><u><strong>Point your dick directly at your open mouth!</strong></u></p>",
          "mode": "pause"
        }
      },
      {
        "say": {
          "label": "<p>Stroke to the beat. </p><p><u><strong>Cum in your mouth</strong></u><strong> </strong>before time is up!</p>",
          "mode": "instant"
        }
      },
      {
        "eval": {
          "script": "startBeat(120)"
        }
      },
      {
        "timer": {
          "duration": "1m",
          "isAsync": true,
          "commands": [
            {
              "eval": {
                "script": "stopAllBeats()"
              }
            },
            {
              "goto": {
                "target": "game-climax-finish-alt"
              }
            }
          ],
          "style": "normal"
        }
      },
      {
        "timer": {
          "duration": "5s",
          "isAsync": true,
          "commands": [
            {
              "eval": {
                "script": "stopBeat(120)\nstartBeat(180)"
              }
            },
            {
              "timer": {
                "duration": "5s",
                "isAsync": true,
                "commands": [
                  {
                    "eval": {
                      "script": "stopBeat(180)\nstartBeat(300)"
                    }
                  }
                ],
                "style": "hidden"
              }
            }
          ],
          "style": "hidden"
        }
      }
    ],
    "game-climax-prompt": [
      {
        "eval": {
          "script": "loadGameImageIfNeeded()\nvar myNumber = randomInt(1,2)\nfunction doAltEnding(value) {\n  stopBeat(120)\n  if (value === myNumber) {\n    rudenessThisGame=0\n    pages.goto('game-climax')\n  } else {\n    altEndingImage=0\n    pages.goto('game-climax-alternate')\n  }\n}"
        }
      },
      {
        "say": {
          "label": "<p>Here&#x27;s where I&#x27;d normally allow you to cum.  But because you were so rude to me earlier, I have a better idea!</p>",
          "mode": "autoplay",
          "allowSkip": true
        }
      },
      {
        "eval": {
          "script": "startBeat(120)"
        }
      },
      {
        "timer": {
          "duration": "20s",
          "isAsync": true,
          "commands": [
            {
              "say": {
                "label": "<p>Time&#x27;s up.  I&#x27;m choosing for you!</p>",
                "mode": "autoplay"
              }
            },
            {
              "eval": {
                "script": "doAltEnding(0) // zero will always fail"
              }
            }
          ]
        }
      },
      {
        "say": {
          "label": "<p>I&#x27;m thinking of a number between one and two. </p><p>Guess right and you get to cum wherever you want.</p><p>If not, you need to cum exactly how I say -- and you may not like it!</p>",
          "mode": "instant"
        }
      },
      {
        "choice": {
          "options": [
            {
              "label": "One",
              "commands": [
                {
                  "eval": {
                    "script": "doAltEnding(1)"
                  }
                }
              ]
            },
            {
              "label": "Two",
              "commands": [
                {
                  "eval": {
                    "script": "doAltEnding(2)"
                  }
                }
              ]
            }
          ]
        }
      }
    ],
    "game-climax-finish-alt": [
      {
        "eval": {
          "script": "endGame()"
        }
      },
      {
        "if": {
          "condition": "altEndingImage==1",
          "commands": [
            {
              "image": {
                "locator": "gallery:ef5262c0-02e6-46d9-93d9-61e26ba9b24a/971169"
              }
            }
          ]
        }
      },
      {
        "if": {
          "condition": "altEndingImage===0",
          "commands": [
            {
              "image": {
                "locator": "gallery:6aee930c-2419-40e8-bef3-f029d847609f/970377"
              }
            }
          ]
        }
      },
      {
        "if": {
          "condition": "guessWelcomeMessage",
          "commands": [
            {
              "say": {
                "label": "<p><eval>guessWelcomeMessage</eval></p>"
              }
            },
            {
              "eval": {
                "script": "guessWelcomeMessage=null"
              }
            }
          ]
        }
      },
      {
        "say": {
          "label": "<p>Alright, how did you do?</p>"
        }
      },
      {
        "choice": {
          "options": [
            {
              "label": "I came in my mouth!",
              "commands": [
                {
                  "goto": {
                    "target": "game-climax-win-alt"
                  }
                }
              ]
            },
            {
              "label": "I couldn't do it!",
              "commands": [
                {
                  "goto": {
                    "target": "game-climax-fail-alt"
                  }
                }
              ]
            }
          ]
        }
      }
    ],
    "game-climax-fail-alt": [
      {
        "image": {
          "locator": "gallery:ef5262c0-02e6-46d9-93d9-61e26ba9b24a/971182"
        }
      },
      {
        "say": {
          "label": "<p>That makes me sad.</p>",
          "mode": "instant"
        }
      },
      {
        "say": {
          "label": "<p>I hope you&#x27;ll try again soon!</p>",
          "mode": "autoplay"
        }
      },
      {
        "say": {
          "label": "<p>Maybe next time I won&#x27;t make you try to cum in your mouth!</p>",
          "mode": "autoplay"
        }
      },
      {
        "end": {}
      }
    ],
    "game-climax-win-alt": [
      {
        "image": {
          "locator": "gallery:ef5262c0-02e6-46d9-93d9-61e26ba9b24a/971196"
        }
      },
      {
        "say": {
          "label": "<p>Yay!  You won!</p><p>I&#x27;m so proud of you!</p>",
          "mode": "autoplay"
        }
      },
      {
        "say": {
          "label": "<p>You can choose what to do with your cum now that it&#x27;s all in your mouth!</p>",
          "mode": "autoplay"
        }
      },
      {
        "say": {
          "label": "<p>I hope you had a good time!  Please come back and play again!!</p>",
          "mode": "autoplay"
        }
      },
      {
        "end": {}
      }
    ],
    "init": [
      {
        "if": {
          "condition": "!gameInit",
          "commands": [
            {
              "say": {
                "label": "<p>I need to grab some stuff to get started.</p><p>You may hear some clicks.</p><p>Okay?</p>",
                "mode": "instant"
              }
            },
            {
              "choice": {
                "options": [
                  {
                    "label": "Do your thing!",
                    "commands": [
                      {
                        "audio.play": {
                          "locator": "file:120bpm.mp3",
                          "loops": 0,
                          "id": "b120",
                          "volume": 0
                        }
                      },
                      {
                        "audio.play": {
                          "locator": "file:150bpm.mp3",
                          "loops": 0,
                          "id": "b150",
                          "volume": 0.01
                        }
                      },
                      {
                        "audio.play": {
                          "locator": "file:180bpm.mp3",
                          "loops": 0,
                          "id": "b180",
                          "volume": 0.01
                        }
                      },
                      {
                        "audio.play": {
                          "locator": "file:240bpm.mp3",
                          "loops": 0,
                          "id": "b240",
                          "volume": 0.01
                        }
                      },
                      {
                        "audio.play": {
                          "locator": "file:300bpm.mp3",
                          "loops": 0,
                          "id": "b300",
                          "volume": 0.01
                        }
                      },
                      {
                        "eval": {
                          "script": "setBeats(120, Sound.get('b120'))\nsetBeats(150, Sound.get('b150'))\nsetBeats(180, Sound.get('b180'))\nsetBeats(240, Sound.get('b240'))\nsetBeats(300, Sound.get('b300'))\nstartAllBeats()\nstopAllBeats()\ngameInit=true\nsetBeatVolume()\npages.goto(initCaller)"
                        }
                      },
                      {
                        "eval": {
                          "script": ""
                        }
                      }
                    ]
                  }
                ]
              }
            }
          ],
          "elseCommands": [
            {
              "eval": {
                "script": "pages.goto(initCaller)"
              }
            }
          ]
        }
      }
    ],
    "button-selector": [
      {
        "eval": {
          "script": "loadGameImageIfNeeded()\nconsole.log('Buttons', buttonSelectorButtons)"
        }
      },
      {
        "if": {
          "condition": "guessWelcomeMessage",
          "commands": [
            {
              "say": {
                "label": "<p><eval>guessWelcomeMessage</eval></p>",
                "mode": "autoplay",
                "allowSkip": true
              }
            },
            {
              "eval": {
                "script": "guessWelcomeMessage = null"
              }
            }
          ]
        }
      },
      {
        "if": {
          "condition": "buttonSelectorMessages[0]",
          "commands": [
            {
              "if": {
                "condition": "buttonSelectorMessages[0].mode==='instant'",
                "commands": [
                  {
                    "say": {
                      "label": "<p><eval>buttonSelectorMessages[0].message</eval></p>",
                      "mode": "instant"
                    }
                  }
                ]
              }
            },
            {
              "if": {
                "condition": "buttonSelectorMessages[0].mode==='autoPlay'",
                "commands": [
                  {
                    "say": {
                      "label": "<p><eval>buttonSelectorMessages[0].message</eval></p>",
                      "mode": "autoplay",
                      "allowSkip": true
                    }
                  }
                ]
              }
            },
            {
              "if": {
                "condition": "buttonSelectorMessages[0].mode==='pause'",
                "commands": [
                  {
                    "say": {
                      "label": "<p><eval>buttonSelectorMessages[0].message</eval></p>",
                      "mode": "pause"
                    }
                  }
                ]
              }
            }
          ],
          "elseCommands": []
        }
      },
      {
        "if": {
          "condition": "buttonSelectorMessages[1]",
          "commands": [
            {
              "if": {
                "condition": "buttonSelectorMessages[1].mode==='instant'",
                "commands": [
                  {
                    "say": {
                      "label": "<p><eval>buttonSelectorMessages[1].message</eval></p>",
                      "mode": "instant"
                    }
                  }
                ]
              }
            },
            {
              "if": {
                "condition": "buttonSelectorMessages[1].mode==='autoPlay'",
                "commands": [
                  {
                    "say": {
                      "label": "<p><eval>buttonSelectorMessages[1].message</eval></p>",
                      "mode": "autoplay",
                      "allowSkip": true
                    }
                  }
                ]
              }
            },
            {
              "if": {
                "condition": "buttonSelectorMessages[1].mode==='pause'",
                "commands": [
                  {
                    "say": {
                      "label": "<p><eval>buttonSelectorMessages[1].message</eval></p>",
                      "mode": "pause"
                    }
                  }
                ]
              }
            }
          ],
          "elseCommands": []
        }
      },
      {
        "if": {
          "condition": "buttonSelectorMessages[2]",
          "commands": [
            {
              "if": {
                "condition": "buttonSelectorMessages[2].mode==='instant'",
                "commands": [
                  {
                    "say": {
                      "label": "<p><eval>buttonSelectorMessages[2].message</eval></p>",
                      "mode": "instant"
                    }
                  }
                ]
              }
            },
            {
              "if": {
                "condition": "buttonSelectorMessages[2].mode==='autoPlay'",
                "commands": [
                  {
                    "say": {
                      "label": "<p><eval>buttonSelectorMessages[2].message</eval></p>",
                      "mode": "autoplay",
                      "allowSkip": true
                    }
                  }
                ]
              }
            },
            {
              "if": {
                "condition": "buttonSelectorMessages[2].mode==='pause'",
                "commands": [
                  {
                    "say": {
                      "label": "<p><eval>buttonSelectorMessages[2].message</eval></p>",
                      "mode": "pause"
                    }
                  }
                ]
              }
            }
          ],
          "elseCommands": []
        }
      },
      {
        "eval": {
          "script": "if (buttonSelectorBpm) startBeat(buttonSelectorBpm)"
        }
      },
      {
        "if": {
          "condition": "buttonSelectorTimer",
          "commands": [
            {
              "if": {
                "condition": "buttonSelectorTimer&&!buttonSelectorTimerIsSecret",
                "commands": [
                  {
                    "timer": {
                      "duration": "$buttonSelectorTimer",
                      "isAsync": true,
                      "commands": [
                        {
                          "if": {
                            "condition": "buttonSelectorTimeoutMessage",
                            "commands": [
                              {
                                "say": {
                                  "label": "<p>buttonSelectorTimeoutMessage</p>",
                                  "mode": "autoplay",
                                  "allowSkip": true
                                }
                              }
                            ]
                          }
                        },
                        {
                          "eval": {
                            "script": "if (buttonSelectorBpm) stopBeat(buttonSelectorBpm)\nif (typeof buttonSelectorTimeoutAction === 'function') buttonSelectorTimeoutAction()"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "if": {
                "condition": "buttonSelectorTimer&&buttonSelectorTimerIsSecret",
                "commands": [
                  {
                    "timer": {
                      "duration": "$buttonSelectorTimer",
                      "isAsync": true,
                      "commands": [
                        {
                          "if": {
                            "condition": "buttonSelectorTimeoutMessage",
                            "commands": [
                              {
                                "say": {
                                  "label": "<p>buttonSelectorTimeoutMessage</p>",
                                  "mode": "autoplay",
                                  "allowSkip": true
                                }
                              }
                            ]
                          }
                        },
                        {
                          "eval": {
                            "script": "if (buttonSelectorBpm) stopBeat(buttonSelectorBpm)\nif (typeof buttonSelectorTimeoutAction === 'function') buttonSelectorTimeoutAction()"
                          }
                        }
                      ],
                      "style": "secret"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "choice": {
          "options": [
            {
              "label": "0",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(0)"
                  }
                }
              ],
              "visible": "$showButton(0)"
            },
            {
              "label": "1",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(1)"
                  }
                }
              ],
              "visible": "$showButton(1)"
            },
            {
              "label": "2",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(2)"
                  }
                }
              ],
              "visible": "$showButton(2)"
            },
            {
              "label": "3",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(3)"
                  }
                }
              ],
              "visible": "$showButton(3)"
            },
            {
              "label": "4",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(4)"
                  }
                }
              ],
              "visible": "$showButton(4)"
            },
            {
              "label": "5",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(5)"
                  }
                }
              ],
              "visible": "$showButton(5)"
            },
            {
              "label": "6",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(6)"
                  }
                }
              ],
              "visible": "$showButton(6)"
            },
            {
              "label": "7",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(7)"
                  }
                }
              ],
              "visible": "$showButton(7)"
            },
            {
              "label": "8",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(8)"
                  }
                }
              ],
              "visible": "$showButton(8)"
            },
            {
              "label": "9",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(9)"
                  }
                }
              ],
              "visible": "$showButton(9)"
            },
            {
              "label": "10",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(10)"
                  }
                }
              ],
              "visible": "$showButton(10)"
            },
            {
              "label": "11",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(11)"
                  }
                }
              ],
              "visible": "$showButton(11)"
            },
            {
              "label": "12",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(12)"
                  }
                }
              ],
              "visible": "$showButton(12)"
            },
            {
              "label": "13",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(13)"
                  }
                }
              ],
              "visible": "$showButton(13)"
            },
            {
              "label": "14",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(14)"
                  }
                }
              ],
              "visible": "$showButton(14)"
            },
            {
              "label": "15",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(15)"
                  }
                }
              ],
              "visible": "$showButton(15)"
            },
            {
              "label": "16",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(16)"
                  }
                }
              ],
              "visible": "$showButton(16)"
            },
            {
              "label": "17",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(17)"
                  }
                }
              ],
              "visible": "$showButton(17)"
            },
            {
              "label": "18",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(18)"
                  }
                }
              ],
              "visible": "$showButton(18)"
            },
            {
              "label": "19",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(19)"
                  }
                }
              ],
              "visible": "$showButton(19)"
            },
            {
              "label": "20",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(20)"
                  }
                }
              ],
              "visible": "$showButton(20)"
            },
            {
              "label": "21",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(21)"
                  }
                }
              ],
              "visible": "$showButton(21)"
            },
            {
              "label": "22",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(22)"
                  }
                }
              ],
              "visible": "$showButton(22)"
            },
            {
              "label": "23",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(23)"
                  }
                }
              ],
              "visible": "$showButton(23)"
            },
            {
              "label": "24",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(24)"
                  }
                }
              ],
              "visible": "$showButton(24)"
            },
            {
              "label": "25",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(25)"
                  }
                }
              ],
              "visible": "$showButton(25)"
            },
            {
              "label": "26",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(26)"
                  }
                }
              ],
              "visible": "$showButton(26)"
            },
            {
              "label": "27",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(27)"
                  }
                }
              ],
              "visible": "$showButton(27)"
            },
            {
              "label": "28",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(28)"
                  }
                }
              ],
              "visible": "$showButton(28)"
            },
            {
              "label": "29",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(29)"
                  }
                }
              ],
              "visible": "$showButton(29)"
            },
            {
              "label": "30",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(30)"
                  }
                }
              ],
              "visible": "$showButton(30)"
            },
            {
              "label": "31",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(31)"
                  }
                }
              ],
              "visible": "$showButton(31)"
            },
            {
              "label": "32",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(32)"
                  }
                }
              ],
              "visible": "$showButton(32)"
            },
            {
              "label": "33",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(33)"
                  }
                }
              ],
              "visible": "$showButton(33)"
            },
            {
              "label": "34",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(34)"
                  }
                }
              ],
              "visible": "$showButton(34)"
            },
            {
              "label": "35",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(35)"
                  }
                }
              ],
              "visible": "$showButton(35)"
            },
            {
              "label": "36",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(36)"
                  }
                }
              ],
              "visible": "$showButton(36)"
            },
            {
              "label": "37",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(37)"
                  }
                }
              ],
              "visible": "$showButton(37)"
            },
            {
              "label": "38",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(38)"
                  }
                }
              ],
              "visible": "$showButton(38)"
            },
            {
              "label": "39",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(39)"
                  }
                }
              ],
              "visible": "$showButton(39)"
            },
            {
              "label": "40",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(40)"
                  }
                }
              ],
              "visible": "$showButton(40)"
            },
            {
              "label": "41",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(41)"
                  }
                }
              ],
              "visible": "$showButton(41)"
            },
            {
              "label": "42",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(42)"
                  }
                }
              ],
              "visible": "$showButton(42)"
            },
            {
              "label": "43",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(43)"
                  }
                }
              ],
              "visible": "$showButton(43)"
            },
            {
              "label": "44",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(44)"
                  }
                }
              ],
              "visible": "$showButton(44)"
            },
            {
              "label": "45",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(45)"
                  }
                }
              ],
              "visible": "$showButton(45)"
            },
            {
              "label": "46",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(46)"
                  }
                }
              ],
              "visible": "$showButton(46)"
            },
            {
              "label": "47",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(47)"
                  }
                }
              ],
              "visible": "$showButton(47)"
            },
            {
              "label": "48",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(48)"
                  }
                }
              ],
              "visible": "$showButton(48)"
            },
            {
              "label": "49",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(49)"
                  }
                }
              ],
              "visible": "$showButton(49)"
            },
            {
              "label": "50",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(50)"
                  }
                }
              ],
              "visible": "$showButton(50)"
            },
            {
              "label": "51",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(51)"
                  }
                }
              ],
              "visible": "$showButton(51)"
            },
            {
              "label": "52",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(52)"
                  }
                }
              ],
              "visible": "$showButton(52)"
            },
            {
              "label": "53",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(53)"
                  }
                }
              ],
              "visible": "$showButton(53)"
            },
            {
              "label": "54",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(54)"
                  }
                }
              ],
              "visible": "$showButton(54)"
            },
            {
              "label": "55",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(55)"
                  }
                }
              ],
              "visible": "$showButton(55)"
            },
            {
              "label": "56",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(56)"
                  }
                }
              ],
              "visible": "$showButton(56)"
            },
            {
              "label": "57",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(57)"
                  }
                }
              ],
              "visible": "$showButton(57)"
            },
            {
              "label": "58",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(58)"
                  }
                }
              ],
              "visible": "$showButton(58)"
            },
            {
              "label": "59",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(59)"
                  }
                }
              ],
              "visible": "$showButton(59)"
            },
            {
              "label": "60",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(60)"
                  }
                }
              ],
              "visible": "$showButton(60)"
            },
            {
              "label": "61",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(61)"
                  }
                }
              ],
              "visible": "$showButton(61)"
            },
            {
              "label": "62",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(62)"
                  }
                }
              ],
              "visible": "$showButton(62)"
            },
            {
              "label": "63",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(63)"
                  }
                }
              ],
              "visible": "$showButton(63)"
            },
            {
              "label": "64",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(64)"
                  }
                }
              ],
              "visible": "$showButton(64)"
            },
            {
              "label": "65",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(65)"
                  }
                }
              ],
              "visible": "$showButton(65)"
            },
            {
              "label": "66",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(66)"
                  }
                }
              ],
              "visible": "$showButton(66)"
            },
            {
              "label": "67",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(67)"
                  }
                }
              ],
              "visible": "$showButton(67)"
            },
            {
              "label": "68",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(68)"
                  }
                }
              ],
              "visible": "$showButton(68)"
            },
            {
              "label": "69",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(69)"
                  }
                }
              ],
              "visible": "$showButton(69)"
            },
            {
              "label": "70",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(70)"
                  }
                }
              ],
              "visible": "$showButton(70)"
            },
            {
              "label": "71",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(71)"
                  }
                }
              ],
              "visible": "$showButton(71)"
            },
            {
              "label": "72",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(72)"
                  }
                }
              ],
              "visible": "$showButton(72)"
            },
            {
              "label": "73",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(73)"
                  }
                }
              ],
              "visible": "$showButton(73)"
            },
            {
              "label": "74",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(74)"
                  }
                }
              ],
              "visible": "$showButton(74)"
            },
            {
              "label": "75",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(75)"
                  }
                }
              ],
              "visible": "$showButton(75)"
            },
            {
              "label": "76",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(76)"
                  }
                }
              ],
              "visible": "$showButton(76)"
            },
            {
              "label": "77",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(77)"
                  }
                }
              ],
              "visible": "$showButton(77)"
            },
            {
              "label": "78",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(78)"
                  }
                }
              ],
              "visible": "$showButton(78)"
            },
            {
              "label": "79",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(79)"
                  }
                }
              ],
              "visible": "$showButton(79)"
            },
            {
              "label": "80",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(80)"
                  }
                }
              ],
              "visible": "$showButton(80)"
            },
            {
              "label": "81",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(81)"
                  }
                }
              ],
              "visible": "$showButton(81)"
            },
            {
              "label": "82",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(82)"
                  }
                }
              ],
              "visible": "$showButton(82)"
            },
            {
              "label": "83",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(83)"
                  }
                }
              ],
              "visible": "$showButton(83)"
            },
            {
              "label": "84",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(84)"
                  }
                }
              ],
              "visible": "$showButton(84)"
            },
            {
              "label": "85",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(85)"
                  }
                }
              ],
              "visible": "$showButton(85)"
            },
            {
              "label": "86",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(86)"
                  }
                }
              ],
              "visible": "$showButton(86)"
            },
            {
              "label": "87",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(87)"
                  }
                }
              ],
              "visible": "$showButton(87)"
            },
            {
              "label": "88",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(88)"
                  }
                }
              ],
              "visible": "$showButton(88)"
            },
            {
              "label": "89",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(89)"
                  }
                }
              ],
              "visible": "$showButton(89)"
            },
            {
              "label": "90",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(90)"
                  }
                }
              ],
              "visible": "$showButton(90)"
            },
            {
              "label": "91",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(91)"
                  }
                }
              ],
              "visible": "$showButton(91)"
            },
            {
              "label": "92",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(92)"
                  }
                }
              ],
              "visible": "$showButton(92)"
            },
            {
              "label": "93",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(93)"
                  }
                }
              ],
              "visible": "$showButton(93)"
            },
            {
              "label": "94",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(94)"
                  }
                }
              ],
              "visible": "$showButton(94)"
            },
            {
              "label": "95",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(95)"
                  }
                }
              ],
              "visible": "$showButton(95)"
            },
            {
              "label": "96",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(96)"
                  }
                }
              ],
              "visible": "$showButton(96)"
            },
            {
              "label": "97",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(97)"
                  }
                }
              ],
              "visible": "$showButton(97)"
            },
            {
              "label": "98",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(98)"
                  }
                }
              ],
              "visible": "$showButton(98)"
            },
            {
              "label": "99",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(99)"
                  }
                }
              ],
              "visible": "$showButton(99)"
            },
            {
              "label": "100",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(100)"
                  }
                }
              ],
              "visible": "$showButton(100)"
            },
            {
              "label": "101",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(101)"
                  }
                }
              ],
              "visible": "$showButton(101)"
            },
            {
              "label": "102",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(102)"
                  }
                }
              ],
              "visible": "$showButton(102)"
            },
            {
              "label": "103",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(103)"
                  }
                }
              ],
              "visible": "$showButton(103)"
            },
            {
              "label": "104",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(104)"
                  }
                }
              ],
              "visible": "$showButton(104)"
            },
            {
              "label": "105",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(105)"
                  }
                }
              ],
              "visible": "$showButton(105)"
            },
            {
              "label": "106",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(106)"
                  }
                }
              ],
              "visible": "$showButton(106)"
            },
            {
              "label": "107",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(107)"
                  }
                }
              ],
              "visible": "$showButton(107)"
            },
            {
              "label": "108",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(108)"
                  }
                }
              ],
              "visible": "$showButton(108)"
            },
            {
              "label": "109",
              "commands": [
                {
                  "eval": {
                    "script": "buttonAction(109)"
                  }
                }
              ],
              "visible": "$showButton(109)"
            }
          ]
        }
      }
    ],
    "guess-number-2": [
      {
        "eval": {
          "script": "loadGameImageIfNeeded()"
        }
      },
      {
        "if": {
          "condition": "guessWelcomeMessage",
          "commands": [
            {
              "say": {
                "label": "<p><eval>guessWelcomeMessage</eval></p>",
                "mode": "autoplay",
                "allowSkip": true
              }
            },
            {
              "eval": {
                "script": "guessWelcomeMessage = null"
              }
            }
          ]
        }
      },
      {
        "eval": {
          "script": "var guessStart, guessEnd, myNumber; \nvar lastGuesses = lastGuesses || []\nguessStart = lastGuessNumberStart\nguessEnd = lastGuessNumberEnd\nmyNumber = lastMyNumber\nvar triesLeft = (guessEnd - guessStart) - (lastGuesses.length + 1)\nif (!useLastGuessNumber || lastGamePage !== currentGamePage /*|| !triesLeft*/) {\n  guessStart = randomInt(guessNumberStartRange[0], guessNumberStartRange[1])\n  guessEnd = randomInt(Math.max(guessNumberEndRange[0], guessStart + 2), guessNumberEndRange[1])\n  myNumber = randomInt(guessStart, guessEnd)\n  lastGuessNumberStart = guessStart\n  lastGuessNumberEnd = guessEnd\n  lastMyNumber = myNumber\n  lastGuesses = []\n} else {\n  guessStart = lastGuessNumberStart\n  guessEnd = lastGuessNumberEnd\n  myNumber = lastMyNumber\n}\nvar triesLeft = 1 // force retries\nlastGamePage = currentGamePage\nstartBeat(180)"
        }
      },
      {
        "timer": {
          "duration": "1m",
          "style": "secret",
          "isAsync": true,
          "commands": [
            {
              "eval": {
                "script": "stopBeat(180)\nprocessRound(\"\", false, false, false, false, 1, \"Sorry, you took too long to answer.\")"
              }
            }
          ]
        }
      },
      {
        "say": {
          "label": "<p>I&#x27;m thinking of a number between <eval>guessStart</eval> and <eval>guessEnd</eval></p>",
          "mode": "instant"
        }
      },
      {
        "say": {
          "label": "<p>Can you guess what it is?</p>",
          "mode": "instant"
        }
      },
      {
        "prompt": {
          "variable": "userGuess"
        }
      },
      {
        "eval": {
          "script": "var intUserGuess = parseInt(userGuess.trim(), 10)\nstopBeat(180)\nvar isIdiot = isNaN(intUserGuess) || intUserGuess < guessStart || intUserGuess > guessEnd\nvar filteredUserGuess = userGuess.trim().toLowerCase()\nvar isDuplicate = arrayContains(lastGuesses, filteredUserGuess)\nvar isOffensive = hasOffensiveWords(filteredUserGuess)\nlastGuesses.push(filteredUserGuess)\nprocessRound(userGuess, intUserGuess === myNumber, isIdiot, isDuplicate, isOffensive, 1)\nuseLastGuessNumber=false"
        }
      }
    ],
    "fast-math-2": [
      {
        "eval": {
          "script": "loadGameImageIfNeeded()"
        }
      },
      {
        "if": {
          "condition": "guessWelcomeMessage",
          "commands": [
            {
              "say": {
                "label": "<p><eval>guessWelcomeMessage</eval></p>",
                "mode": "autoplay",
                "allowSkip": true
              }
            },
            {
              "eval": {
                "script": "guessWelcomeMessage = null"
              }
            }
          ]
        }
      },
      {
        "eval": {
          "script": "\r\nvar guessStart, guessEnd, myNumber, formula; \r\n// useLastGuessNumber = false; // force a new one\r\nif (!useLastGuessNumber || lastGamePage !== currentGamePage) {\r\n  var subOrAdd = randomInt(0,1)\r\n  guessStart = randomInt(3, 50)\r\n  guessEnd = randomInt(3, 50)\r\n  myNumber = subOrAdd ? guessStart - guessEnd : guessStart + guessEnd\r\n  while (myNumber < 0) {\r\n    guessStart = randomInt(3, 50)\r\n    guessEnd = randomInt(3, 50)\r\n    myNumber = subOrAdd ? guessStart - guessEnd : guessStart + guessEnd\r\n  }\r\n  lastMyNumber = myNumber\r\n  formula = guessStart + (subOrAdd ? \" - \" : \" + \") + guessEnd\r\n  lastGuessNumberStart = formula\r\n  lastMyNumber = myNumber\r\n  lastGuesses = []\r\n} else {\r\n  formula = lastGuessNumberStart\r\n  myNumber = lastMyNumber\r\n}\r\nlastGamePage = currentGamePage\r\nvar triesLeft = 1 // always retry\r\n\r\n\r\nvar numberOfFaps = randomInt(40,70)\r\nvar bpms = 240\r\nvar fapTime = Math.round((numberOfFaps / (bpms / 60)) * 1000)\r\n"
        }
      },
      {
        "say": {
          "label": "<p>What is <eval>formula</eval> ?</p>",
          "mode": "instant"
        }
      },
      {
        "eval": {
          "script": "startBeat(bpms)"
        }
      },
      {
        "timer": {
          "duration": "$fapTime",
          "isAsync": true,
          "commands": [
            {
              "eval": {
                "script": "stopBeat(bpms)\nprocessRound(\"\", false, \n    false, false, false, triesLeft,\n    \"Time's up!\")"
              }
            }
          ]
        }
      },
      {
        "prompt": {
          "variable": "userGuess"
        }
      },
      {
        "eval": {
          "script": "stopBeat(bpms)\nvar intUserGuess = parseInt(userGuess.trim(), 10)\nvar diff = Math.abs((isNaN(intUserGuess) ? 0 : intUserGuess) - myNumber)\nvar isIdiot = isNaN(intUserGuess) || diff / intUserGuess > .2\nvar filteredUserGuess = userGuess.trim().toLowerCase()\nvar isDuplicate = arrayContains(lastGuesses, filteredUserGuess)\nvar isOffensive = hasOffensiveWords(filteredUserGuess)\nlastGuesses.push(filteredUserGuess)\n\nuseLastGuessNumber=false\nprocessRound(userGuess, intUserGuess === myNumber, \nisIdiot, isDuplicate, isOffensive, triesLeft)"
        }
      }
    ],
    "game-climax-finish": [
      {
        "eval": {
          "script": "loadGameImageIfNeeded()\nendGame()"
        }
      },
      {
        "if": {
          "condition": "guessWelcomeMessage",
          "commands": [
            {
              "say": {
                "label": "<p><eval>guessWelcomeMessage</eval></p>"
              }
            },
            {
              "eval": {
                "script": "guessWelcomeMessage=null"
              }
            }
          ]
        }
      },
      {
        "say": {
          "label": "<p>Alright, how did you do?</p>"
        }
      },
      {
        "choice": {
          "options": [
            {
              "label": "I Came!",
              "commands": [
                {
                  "goto": {
                    "target": "game-climax-win"
                  }
                }
              ]
            },
            {
              "label": "I couldn't cum.",
              "commands": [
                {
                  "goto": {
                    "target": "game-climax-finish-2"
                  }
                }
              ]
            }
          ]
        }
      }
    ],
    "game-climax-finish-2": [
      {
        "image": {
          "locator": "gallery:ef5262c0-02e6-46d9-93d9-61e26ba9b24a/971235"
        }
      },
      {
        "say": {
          "label": "<p>Aw, that&#x27;s not good!</p>",
          "mode": "instant"
        }
      },
      {
        "say": {
          "label": "<p>I&#x27;ll give you one more chance, but you may not like it.</p><p>Do you want to try?</p>",
          "mode": "instant"
        }
      },
      {
        "choice": {
          "options": [
            {
              "label": "Yes!  I'll do anything!",
              "commands": [
                {
                  "eval": {
                    "script": "altEndingImage=1\npages.goto('game-climax-alternate')"
                  }
                }
              ]
            },
            {
              "label": "No thanks.",
              "commands": [
                {
                  "goto": {
                    "target": "game-climax-fail"
                  }
                }
              ]
            }
          ]
        }
      }
    ],
    "rude-punishOrEnd1-end3": [
      {
        "timer": {
          "duration": "5s",
          "isAsync": true,
          "commands": [
            {
              "eval": {
                "script": "punishMessage = randomString([\n  \"It shouldn't take that long to decide!\",\n  \"Is it that hard to know if you're sorry?\",\n  \"If it takes you that long to say, I can only assume you're not sorry!\",\n  \"I don't have all day for you to decide!\"\n  ])\npunishMessageOnPunish = true\npages.goto('rude-punishOrEnd1')"
              }
            }
          ]
        }
      },
      {
        "say": {
          "label": "<p>Are you ready to apologize for how you acted, and for cumming?</p>",
          "mode": "instant"
        }
      },
      {
        "choice": {
          "options": [
            {
              "label": "Yes, I'm sorry!",
              "commands": [
                {
                  "goto": {
                    "target": "rude-punishOrEnd1-end2"
                  }
                }
              ]
            },
            {
              "label": "No. Suck my cock.",
              "commands": [
                {
                  "eval": {
                    "script": "setValue('forcePageReason', \"being rude after helping you cum\")\n// pages.goto('rude-punishOrEnd1-end1')\npages.goto('rude-punishOrEnd1')"
                  }
                }
              ]
            }
          ]
        }
      }
    ]
  },
  "modules": {
    "audio": {},
    "storage": {},
    "notification": {}
  },
  "galleries": {
    "e68b2c06-0c28-487c-b04b-ea26a6a4a886": {
      "name": "Come In",
      "images": [
        {
          "id": 969249,
          "hash": "7ef85d4bf25439f7850af499ea0ad45c51e37cd6",
          "size": 71614,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969250,
          "hash": "1e56df8cf87b823f870e2438f1c032ec73d8abe7",
          "size": 59233,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969251,
          "hash": "8eaef84b49b8637fe6b805b14d3a200aa50f8537",
          "size": 72443,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969252,
          "hash": "3925730047aa5dc8c5e8d9b3fe05be3e4f0e9b81",
          "size": 61035,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969253,
          "hash": "55b65e7efcf0fe939a1d6e0cded696539ab98375",
          "size": 66602,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969254,
          "hash": "020c367a2628e4e2a41aa78aa1a863d8faeb214b",
          "size": 58120,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969255,
          "hash": "dce40d97e9a3d4a3dbb2af0f6afb5384c2a32678",
          "size": 60079,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969256,
          "hash": "195928d845c637d39ce6ba28bfd21b4b1c95c73c",
          "size": 61562,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969257,
          "hash": "181baaef5096515f730dabd32c65d678b3fb8066",
          "size": 53705,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969258,
          "hash": "1453938a5b40ec10ac0ba2242b593d1ef7fc9caa",
          "size": 65175,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969259,
          "hash": "856bebfd9a26969aed976463dfbdd2fc979265b6",
          "size": 77695,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969260,
          "hash": "50a1b2ae7ea6902fd8d041fb71f52f8d97ebf831",
          "size": 81378,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969261,
          "hash": "38951c5bec32bce4a76f5000432333ffbbce2aa1",
          "size": 81990,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969262,
          "hash": "637507244a101b3695a73715457d766e67fd7176",
          "size": 82811,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969263,
          "hash": "ac03ba0c7ee6b9dd224134c7a9aff1b1ea33bc65",
          "size": 79129,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969264,
          "hash": "884378193b6dbc8b883bbf6279656b377bf4e946",
          "size": 81210,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969265,
          "hash": "b61b8e22473494226f2fed7a9acaa2a7e0d8ca6d",
          "size": 83732,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969266,
          "hash": "9b6857883d37509aff4f737108958ea87fa06aa8",
          "size": 71024,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969267,
          "hash": "36759a39a1c1072e060b823dd8e6906290e1b62a",
          "size": 78407,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969268,
          "hash": "c7e60da018bd3952de9b42d7371360806c4b6d21",
          "size": 82490,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969269,
          "hash": "199be8b971ed83fe54f4ce6949f6cb185f3065fc",
          "size": 80542,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969270,
          "hash": "56fa90a5853ef2012780ef80317c4bf06dda886c",
          "size": 82683,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969271,
          "hash": "7db070ef1267dfbddac142600577a1581b7e7320",
          "size": 93145,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969272,
          "hash": "e37ce3517236974244caba89d98e9902b0d1c6ff",
          "size": 99674,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969273,
          "hash": "41fa162da565303a8736eb8d986faffbb013cd19",
          "size": 71629,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969274,
          "hash": "9eeb47e3d620bb51224e68a5a76fa3b239c4443c",
          "size": 77762,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969275,
          "hash": "ed51eb4d0e3409815e7082ddd9647cfdde8c30b0",
          "size": 73362,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969276,
          "hash": "56366f536ebd330d8c2fb3faee096faadd89af14",
          "size": 76439,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969277,
          "hash": "d113883cc76bfc6e63a228e99a2f1e42df46a4e4",
          "size": 74819,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969278,
          "hash": "30f6ccb89bfbad7779a4e2bb29334a77208dc8cb",
          "size": 62416,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969279,
          "hash": "a4cebeecd1b5ab5c91040a8d7869de8df0fc3cf3",
          "size": 84398,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969280,
          "hash": "de0a276474b3e6ca2edaa42da9870d5afd3d9942",
          "size": 66709,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969281,
          "hash": "f47aba6f5b74269c0645c2ebfbcb4b49e874fec4",
          "size": 80262,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969282,
          "hash": "431d6296182f6fa4a73d471b44e770c06bd8ab9b",
          "size": 77228,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969283,
          "hash": "a3be87f111b0fd8c28117a3d7c40bcac9332d84e",
          "size": 63628,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969284,
          "hash": "d811c32fc3b3c582942ad8d12eea8b7952288462",
          "size": 57030,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969285,
          "hash": "8e94b0b297f571aab5d68aa59f3142b0df1edf4d",
          "size": 81466,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969286,
          "hash": "6eeeaf38fa879c1d33f7877bde4f35b10342c640",
          "size": 75595,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969287,
          "hash": "ef7cceab7055c946be4320f13263d48434973618",
          "size": 65209,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969288,
          "hash": "7e57ed64ccb099d968f886476821c6bedd807b38",
          "size": 63540,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969289,
          "hash": "73bd2fcc55aa3c45366b41b6669f10db1045d320",
          "size": 68509,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969290,
          "hash": "9c21994772294e21a9b3ef8e6ba77cf22550dc16",
          "size": 80940,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969291,
          "hash": "d83808f2c00274b72a33807c2480c9af71dcc74f",
          "size": 72215,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969292,
          "hash": "e2a14056ff117a1fe7ea0f72b0c7512159688e52",
          "size": 71604,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969293,
          "hash": "c1e11f8ed947838c6039f569f410644269800554",
          "size": 81968,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969294,
          "hash": "57beeee6b3fe30bdd4120df3e8298c29f5ad9585",
          "size": 80882,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969295,
          "hash": "4d69206cc56178732854389b0cdf405e0e2d8f95",
          "size": 73163,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969296,
          "hash": "17a4d94e17fc74f5338d8424db9900ed6973e760",
          "size": 66498,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969297,
          "hash": "e05f15f23b6e05888763269de3f7a3f07e6f9ed6",
          "size": 75675,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969298,
          "hash": "8018db53649ad6be46c4d04e4239e786e22db941",
          "size": 84555,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969299,
          "hash": "6615928d8eae1001b88616ef7d3ead8b146c40ef",
          "size": 81505,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969300,
          "hash": "0ddedbbc17ccd93d79176f54aebfd6ae70dccdcb",
          "size": 67047,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969301,
          "hash": "7ff32f9b40be8c3dc2f3cf7e6382286b826bb473",
          "size": 71474,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969302,
          "hash": "5b7c16c4db5cebc5be752d6dfbee2c9d47a75422",
          "size": 59213,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969303,
          "hash": "2cd7c71e6b8a16e6a3de4e8ca0b6f977bcd8cb37",
          "size": 71995,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969304,
          "hash": "70bb64d5fb4f8b13a5e522a4aadc710630f47edc",
          "size": 61206,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969305,
          "hash": "5028f7c13fb91c8981542cdbe0d702b64ff9b694",
          "size": 66545,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969306,
          "hash": "62ec3529ad5b23e0c4c744098323f0de5cfb7239",
          "size": 57981,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969307,
          "hash": "fc752934d68d1aaa5e2343b430e8436e8a593600",
          "size": 60180,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969308,
          "hash": "4ce6e505f782e003941cb3832e25433c3e1f55b9",
          "size": 61462,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969309,
          "hash": "57e599d7d9f5e3fbee8aef35f8d5cdad0ee6f69b",
          "size": 53571,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969310,
          "hash": "5e0701d45ca423d8f08a9b281c1dd12db4607f16",
          "size": 65119,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969311,
          "hash": "19954738fe3204171969177925745609264a71c3",
          "size": 73767,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969312,
          "hash": "70c850528a22471a6825b2ed67e6acd824dfe99a",
          "size": 73692,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969313,
          "hash": "a5aaf084de0774884447a1a5ffa78e0b7f902d62",
          "size": 66822,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969314,
          "hash": "9403b42306b7e835967f60e3950388ff0ff22f26",
          "size": 66877,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969315,
          "hash": "0094dee1a70979ac466b93b02bde681f712c43c2",
          "size": 67817,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969316,
          "hash": "8dc079643354ff26ceb9da0a2671e01dca2e279a",
          "size": 70474,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969317,
          "hash": "557b826f6ea32542f803a692b17751c100254717",
          "size": 73166,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969318,
          "hash": "328fb04733c865d1a481f498cdaa7c5a0e25a927",
          "size": 65464,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969319,
          "hash": "5f9eb57d127fa9330328cdc22d7421f8da172646",
          "size": 68794,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969320,
          "hash": "bc7685239080a48f27811816e3b42cc764870449",
          "size": 64514,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969321,
          "hash": "37e976ba7122c2e1768e76936285f90d9c14b5f0",
          "size": 62334,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969322,
          "hash": "941150a64d38e9e607b03441fa19af440243a69a",
          "size": 66203,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969323,
          "hash": "7ba52d9b0ac8224a6c69761d828ec4cb5c910ef6",
          "size": 67972,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969324,
          "hash": "e1affe330efcdff49e4178bdccb0f368425c38ec",
          "size": 53509,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969325,
          "hash": "95470450901cd84e52caa36f2a76f0ce64b1f44a",
          "size": 67875,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969326,
          "hash": "f624427c40741075028bbb18c0ef5c9fffe4898d",
          "size": 65156,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969327,
          "hash": "b707056217f4091e4b476e0dde9e97b3358a79f1",
          "size": 64126,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969328,
          "hash": "c83d1be2ff9e5a7a522b127982841d94f9cbf59c",
          "size": 63623,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969329,
          "hash": "b0cf47a1c58ffe4ab2ca56141a83af6bfa32b92a",
          "size": 64737,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969330,
          "hash": "a448c77d4c9d3ae4e4bbaf75fdb3fbe5a88cb4d4",
          "size": 59786,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969331,
          "hash": "c010a4c26882a3691041d8f613f7d16fcc580dbf",
          "size": 79095,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969332,
          "hash": "cf0dade10d2c7e1ad5b2296c1168b5fe2333c658",
          "size": 67410,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969333,
          "hash": "58ed37191a44713725047c441932ed4fcc61db84",
          "size": 55360,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969334,
          "hash": "a18ace7fdad073cad48e300841aecdab0816ee9b",
          "size": 72065,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969335,
          "hash": "335f165889aa1d53a6bf9e3f59da4cd2bdb111d7",
          "size": 66634,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969336,
          "hash": "b6c8c3d2cbb4acb9b42518d5e0376c5291b4108e",
          "size": 61491,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969337,
          "hash": "b4e3399acc070823184133c954450d647263c488",
          "size": 66038,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969338,
          "hash": "7572dfeecb8cff1a04a3c0417768a551ad2e1b10",
          "size": 67324,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969339,
          "hash": "a56a4c4bec9cec2e0124420d7d04ccf814b9f71a",
          "size": 76508,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969340,
          "hash": "4ea91c5ac02b2381c4ded3dfc10a54e35c5d37f0",
          "size": 70472,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969341,
          "hash": "b773536c1b3d425aa6c83f502c1b6b17b7fb8cfa",
          "size": 57226,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969342,
          "hash": "3748be037f341fcaab2d98f2a3f8a23c57f4b156",
          "size": 57834,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969343,
          "hash": "fbccd4e5bba207f56bb19d0dae72e259202cb346",
          "size": 58051,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969344,
          "hash": "0500d2029c89e01aa2b12e0a0ce9968dbb14485b",
          "size": 56987,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969345,
          "hash": "a36c23fe8e3784192bdcf983ae52e0e88d7b7304",
          "size": 68722,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969346,
          "hash": "4c812fb32f1fddf9ea6da2e3ed649c64726991a3",
          "size": 68662,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969347,
          "hash": "58654e28a45798ee8b1500f8470a5dad4a5a9030",
          "size": 65625,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969348,
          "hash": "9516df6b40eb758d01214925cf69b54f943e8ea7",
          "size": 60965,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969349,
          "hash": "55e9bd5c1070ecd961e5605c8f2b4e031c80c63b",
          "size": 55619,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969350,
          "hash": "e58b80488c95044d1d15033efb06de3ea336138f",
          "size": 57207,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969351,
          "hash": "c59897b91a7737aa8434b2056104743392032b12",
          "size": 58099,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969352,
          "hash": "e60a04621bfad7c61ca6cf47cf03c9857004fd5e",
          "size": 68378,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969353,
          "hash": "318dcb01186552eac6ddd08a449f4147d66abfee",
          "size": 66449,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969354,
          "hash": "3ee59d1a625f15c5df2f8e211e9dafdf606ca5bb",
          "size": 66133,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969355,
          "hash": "b5e49ea1f6f9737540b02a24151a740681bb9533",
          "size": 53051,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969356,
          "hash": "c76fd2cf369558377c21b0f3cf6edfa61a6f2806",
          "size": 53152,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969357,
          "hash": "1320ce8434d3b7cad96cf181d3ecd1d8dff7a82d",
          "size": 61581,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969358,
          "hash": "a95ec8588ba619506b0e2ad34fea241db22e8e6f",
          "size": 66650,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969359,
          "hash": "79843ea9dc23ba95872e6b5272d63c8cdd7575c6",
          "size": 67795,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969360,
          "hash": "4106b73324a6ca9f5504c673a6aadc9a9e7576f5",
          "size": 55566,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969361,
          "hash": "295e730031c9adba18825fa01a9f6b0070ae0756",
          "size": 67261,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969362,
          "hash": "c50d7e62ce422d0adeff6645cb1ba28c0bb25e77",
          "size": 69142,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969363,
          "hash": "392aa7640ee62706cbc850565de0a659c539fc5e",
          "size": 78435,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969364,
          "hash": "86b9b8a7bd79ced49560eec2992a92d2c585f9cd",
          "size": 69007,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969365,
          "hash": "ffe763edd4038483f31048248458732e45641199",
          "size": 78073,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969366,
          "hash": "176f4ed1f8f4ba598a061e892edc62f06e383e5f",
          "size": 81822,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969367,
          "hash": "4afe072ee36518108817237b916fb2ce49816d5d",
          "size": 82555,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969368,
          "hash": "bf78a73f30a59fbc4b920d065bf64207d22c2547",
          "size": 83255,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969369,
          "hash": "b635cbf564982803be4d5830e8fabbe336846c51",
          "size": 79547,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969370,
          "hash": "14e699abab49869706e1e113cc6dc3fab12b5480",
          "size": 81779,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969371,
          "hash": "c5553108e65f7fdb6e54af5540011286f103698d",
          "size": 84227,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969372,
          "hash": "9d1065058f2167c604cca0b13919e61087005c93",
          "size": 71358,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969373,
          "hash": "f6c182b71734875b2434b4783d58e051a36d12e5",
          "size": 78894,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969374,
          "hash": "932d7dea1e9927f04105e26124d721974526024b",
          "size": 82987,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969375,
          "hash": "48e6b3cfa7fefee4776601661249bd8532d49402",
          "size": 81195,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969376,
          "hash": "919e14127387c50d7dbcbb2c92c1b7f1a60db79d",
          "size": 83131,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969377,
          "hash": "32d4fd78d35575779bed361b769eb9a77bd301dd",
          "size": 93717,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969378,
          "hash": "40b39eef1534a174d05698460f51218cd13391a0",
          "size": 100425,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969379,
          "hash": "5c8ebf53b09569d139cc1442f2c3531100253d1e",
          "size": 71821,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969380,
          "hash": "062c58de84fdcb22363117a1f3e371bf6eecfc75",
          "size": 78023,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969381,
          "hash": "e99a5bacbee96115891b69a024d5629bdf7e0a64",
          "size": 73575,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969382,
          "hash": "d3111b6636161126f4b8a4eb7d966bf1e15fef68",
          "size": 76837,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969383,
          "hash": "b4a4a0dc0ce95ebd4852eaf6d653cea312a8af65",
          "size": 75027,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969384,
          "hash": "fd9813bdedeb908845291a5567fe8d8eca07caba",
          "size": 62467,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969385,
          "hash": "21d12bf3c2a034137b132acdd9f8298832f3ef13",
          "size": 84791,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969386,
          "hash": "e92e76ed4cc4f5a262bd9baa811dc5992d5f0b95",
          "size": 66736,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969387,
          "hash": "21867d3ebe265153c2458b7f9b21c312a5317d17",
          "size": 80585,
          "width": 1280,
          "height": 854
        },
        {
          "id": 969388,
          "hash": "9e487a28c449140540d213d0e3f3e6e59c91bf0a",
          "size": 77525,
          "width": 854,
          "height": 1280
        },
        {
          "id": 969389,
          "hash": "aeefa950a2a5044440e076394ea286900acd7e51",
          "size": 75981,
          "width": 1280,
          "height": 854
        }
      ]
    },
    "6aee930c-2419-40e8-bef3-f029d847609f": {
      "name": "Undressing",
      "images": [
        {
          "id": 970319,
          "hash": "68c5c631f767bba50505d3fa4576afb265e32e7a",
          "size": 98097,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970320,
          "hash": "ed28dbf4cf24d78d98e3bba5eacf88308420ead4",
          "size": 113902,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970321,
          "hash": "356c32d85e8a4c41d963646d8c4b2e163e0cc305",
          "size": 119931,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970322,
          "hash": "a03f7d84f9d0453f5221cbd7b06b1dc2cfde2079",
          "size": 123938,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970323,
          "hash": "490133ae0dd11c8cb9f098bf58e3f66226c9cf88",
          "size": 96850,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970324,
          "hash": "11de256a6d2821c1d17e8bfab8be38d29f6d61ce",
          "size": 104465,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970325,
          "hash": "61854814302b8f21f9b586ca49ebb5c8014eefdd",
          "size": 113026,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970326,
          "hash": "8dd47387fa6f0b7c2cbdb3c41cba876ec20262e1",
          "size": 108094,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970327,
          "hash": "3f9bc107c5e5d67f3abf4c4e47d077d045ac5270",
          "size": 99806,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970328,
          "hash": "58a437be354590857d3f8dce04749d48e68d9dcf",
          "size": 104606,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970329,
          "hash": "5701eb083149e52174168fe6ccae81bff94a375d",
          "size": 95879,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970330,
          "hash": "969b5716be05ff11df439d16275fc9334cd96097",
          "size": 102246,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970331,
          "hash": "c2b9650dcd59dd1fd58ab6ad397b1361fd7255bf",
          "size": 121134,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970332,
          "hash": "f82f38688cb69d0dab4e16972177a8838c413614",
          "size": 112641,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970333,
          "hash": "5e016236ccb468982a5e91f1a71ffcebb367c149",
          "size": 119785,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970334,
          "hash": "6de540f9162cee0785e7303d5bcf56f7c2e08e45",
          "size": 95769,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970335,
          "hash": "e80d21b0db482b284e875239d3c0293fe2a30851",
          "size": 105277,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970336,
          "hash": "a6a3385f2d750fc197df171c064ce2b284c0a5af",
          "size": 94330,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970337,
          "hash": "3db1b448cabead119b3062711576a842faff7d93",
          "size": 97116,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970338,
          "hash": "737833947897103f03e0e68a3b20784463141ec9",
          "size": 104461,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970339,
          "hash": "8bc7a2246fcbcef567d2d26e9fb21f409ab00d86",
          "size": 103004,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970340,
          "hash": "696a386252bd1d832bb126d953cbc7ef12669702",
          "size": 94954,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970341,
          "hash": "394e5b3b99da51cd9c3d4ea62a89810eff90c94f",
          "size": 96626,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970342,
          "hash": "f9c481fc302c1ec995aff63cb4b00dce9f0a6005",
          "size": 100399,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970343,
          "hash": "8e8ec7275faad03afb4338cb147aace5f26bfae7",
          "size": 98008,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970344,
          "hash": "79da2b0427c22c3d7ec7ee49ab6a8b9fdb377ffd",
          "size": 109479,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970345,
          "hash": "d86f236978b20d942e34c873e545d9fbcf54692a",
          "size": 97858,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970346,
          "hash": "0f935ae41ea400795f05c1de03490addb3a1be5d",
          "size": 85668,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970347,
          "hash": "e731a5ca814f5408ef3b93e64908e627afd57ac0",
          "size": 94326,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970348,
          "hash": "033077ed82600d224930c12824881f412d9d6bee",
          "size": 98628,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970349,
          "hash": "bcf93ed98f39dd990776b4abf2842ced2e4a7fb4",
          "size": 99879,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970350,
          "hash": "81f0c417ae51cbe97f85dab879282fabebc951af",
          "size": 99799,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970351,
          "hash": "b01f849c7ed1ff241563b5a025e9604abda7f8cc",
          "size": 100447,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970352,
          "hash": "fb5f3bffb8dd4513e18fea9bf99117510595da7e",
          "size": 98960,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970353,
          "hash": "c26afccacccb5419c3cdf8dfcf8ba4c901cde4cf",
          "size": 100268,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970354,
          "hash": "16f8a10357115386d50d1b2f1a3bdeeb776a8dee",
          "size": 99499,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970355,
          "hash": "69be1afc6f372b1710be31cf12425e7a63c66b8a",
          "size": 96305,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970356,
          "hash": "61ef0325c02aeed0da7195a2532fdf9a0ad7c877",
          "size": 100528,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970357,
          "hash": "ab136da5cc530d0df839496c87be3f1b858f235d",
          "size": 107496,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970358,
          "hash": "a8f95475d529445ffc61ba8753b36f21d9b7ef5f",
          "size": 99758,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970359,
          "hash": "782c8e8a7950acc5e863efb5b5265e995a72acf3",
          "size": 114878,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970360,
          "hash": "3f26c39cc3dad0dc1da4ccea9b1e49370126ff2f",
          "size": 104685,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970361,
          "hash": "6a712fd825e89dd841f605ccd7707e5a44529634",
          "size": 98783,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970362,
          "hash": "996a44ea87407de6a34f59f99b7b22f0e6000a52",
          "size": 101240,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970363,
          "hash": "3b7444d9b3e069d2ced12454e487aed1af5adf71",
          "size": 100674,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970364,
          "hash": "b22b39ab19b532da9c141243a5aa6de10550cd97",
          "size": 96397,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970365,
          "hash": "4f2a58cf9758221b5cf0c511f89bbf8249156180",
          "size": 97241,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970366,
          "hash": "103ecfaa5445384a46a8a41b9e6f2bb6a53b8dc1",
          "size": 113675,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970367,
          "hash": "8635d28f6cf209450fcf17b69cf2b15db2ab0c80",
          "size": 130309,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970368,
          "hash": "4aa6fe764dfe6a523e92601dfab137d3949796be",
          "size": 99000,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970369,
          "hash": "b71a2c8bb809f8158c2d389bb43f5b929833a696",
          "size": 87566,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970370,
          "hash": "bd167a853505dc583573b8ac2664bd797547d9d6",
          "size": 97311,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970371,
          "hash": "20e8bec85e6fddb748b6120e000a95cadf627c04",
          "size": 94805,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970372,
          "hash": "9d85a4fd0b1e6dee57ccae665fe4a262938c584d",
          "size": 106283,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970373,
          "hash": "efe0589aa5d78f95371cfcc2c32e2cfe6abd8335",
          "size": 97440,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970374,
          "hash": "69bc797c7a7fee778fa6e0708b40127d219413a1",
          "size": 100870,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970375,
          "hash": "8c0b0cd6e755f34cf9b66cdeca24180309115106",
          "size": 108380,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970376,
          "hash": "b2c95823868b9d79791781e55963cbe9fc7f3534",
          "size": 94801,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970377,
          "hash": "3d45d7d6d1c3594e78279c46995d5a5b04a52d5f",
          "size": 107491,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970378,
          "hash": "34a00fc4823888fbd23dad56ec4473e92491c70e",
          "size": 109828,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970379,
          "hash": "f8f7019e83501803ed44a5098b6a5c49ac5fbd9a",
          "size": 97836,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970380,
          "hash": "a18be6beaa25f3b016a90cc17cb3584f6ad1a186",
          "size": 91125,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970381,
          "hash": "6be7c59f4a5927ff3a3ac784394963ac33cd189e",
          "size": 99688,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970382,
          "hash": "352ff0fb0a0b3952d9153b8ade69b8c6fff2b633",
          "size": 103334,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970383,
          "hash": "8821c2e4a39e1043f1d9c2c2052470b0c8862293",
          "size": 107409,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970384,
          "hash": "ed6c1cd89f819e6abe59b8f6e9cd2fff508f1918",
          "size": 99617,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970385,
          "hash": "a5bfaba1fd208ddc75e940e61771a0bb3b33ee1e",
          "size": 100289,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970386,
          "hash": "f50dc49c38b250f9839ffc7a1d627448848ce01f",
          "size": 104876,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970387,
          "hash": "4d86218b8867c5fa78ea6f374f738f9de161acc7",
          "size": 104300,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970388,
          "hash": "f4b09ffa076140e384be6b7667db246fd97d285a",
          "size": 113525,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970389,
          "hash": "27a7a066058f3b49cf23ab5e1a116a9298592411",
          "size": 112710,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970390,
          "hash": "92531442e925870200b9c8d749d98edfc4f9dd64",
          "size": 109679,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970391,
          "hash": "2f86cf9549f47dfd7a27ee6d04995551be1bfada",
          "size": 107204,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970392,
          "hash": "2dacbc195a346f4ca46414fd56aae6bd6aee5bae",
          "size": 105785,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970393,
          "hash": "90f3ed9d098ec3e32362e7150ff322972435afc4",
          "size": 103591,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970394,
          "hash": "164e3aff3557628fdcfc4b7d02e39fbe6a317257",
          "size": 89493,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970395,
          "hash": "97d04db30d7fb08efba2d4ff053562bc7efdfe01",
          "size": 97863,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970396,
          "hash": "b3aadd51297e4ab8eb48970a461930de518661c5",
          "size": 90810,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970397,
          "hash": "c2779788af133dc428518a2d97a007daa0f12399",
          "size": 74305,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970398,
          "hash": "ad5530567354c612aec4091e67400a6ed0a222f7",
          "size": 98043,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970399,
          "hash": "02fb619c8e09a5fef65e917629d6b443cf60b1db",
          "size": 96495,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970400,
          "hash": "0d79baf0706f740b71b8ebede2eed606d8822e8c",
          "size": 111075,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970401,
          "hash": "fd0dafaf18bbf753a523ba7582fe48737437d145",
          "size": 103090,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970402,
          "hash": "43c29a1a8f9d0c773492cd3d5ab13e2265f60361",
          "size": 108238,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970403,
          "hash": "aafd0961f8793bf74665bc2a4ba756e5048aa6f3",
          "size": 79798,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970404,
          "hash": "b3b7d170869bf5cede05397a232cbdb488b4a05d",
          "size": 69342,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970405,
          "hash": "1a8b67b4ef216b954d18f1c87d31aa2781a9b516",
          "size": 93874,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970406,
          "hash": "fe648c393fdd1ae87e0601e31a05c88933c7de20",
          "size": 117617,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970407,
          "hash": "97b8d8172f135e8094c71a09850de93e4fe02443",
          "size": 91258,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970408,
          "hash": "8a0af82efa6451a87a42a603a9bced37ad3a6585",
          "size": 105941,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970409,
          "hash": "4ffa9097d0a06b4af5d6d1d3c78bdaef0b008fae",
          "size": 86434,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970410,
          "hash": "ecc8a0a2227c16e39f5552f9d5fb2c5f8cda9d13",
          "size": 100080,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970411,
          "hash": "1b86afff88dd1c3243637661faf6ea4e1a66ecdd",
          "size": 86289,
          "width": 1280,
          "height": 853
        },
        {
          "id": 970412,
          "hash": "0abefe192ebddc8f91c1d819b23bdee383471533",
          "size": 93025,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970413,
          "hash": "f4ea9d48524edc8d966570410c906a2e399ab41b",
          "size": 88804,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970414,
          "hash": "62d079873362679f9fbb3e94f5a4b4e5eb0795c7",
          "size": 83026,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970317,
          "hash": "243a5154d4aab76a013cbb9c0cedb62c5b82806d",
          "size": 123152,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970318,
          "hash": "2b334b8e0bf9b2a90c2af4f62d4172fe51234878",
          "size": 101046,
          "width": 853,
          "height": 1280
        },
        {
          "id": 971654,
          "hash": "2b42d4b77000a77aded78b5752ff31efb17b6c02",
          "size": 122264,
          "width": 619,
          "height": 713
        }
      ]
    },
    "9f4f07ff-6377-416b-8876-de10912f999f": {
      "name": "Mad, on counter",
      "images": [
        {
          "id": 970398,
          "hash": "ad5530567354c612aec4091e67400a6ed0a222f7",
          "size": 98043,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970370,
          "hash": "bd167a853505dc583573b8ac2664bd797547d9d6",
          "size": 97311,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970369,
          "hash": "b71a2c8bb809f8158c2d389bb43f5b929833a696",
          "size": 87566,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970377,
          "hash": "3d45d7d6d1c3594e78279c46995d5a5b04a52d5f",
          "size": 107491,
          "width": 853,
          "height": 1280
        }
      ]
    },
    "f0c7f265-d539-4b4a-9f92-a82d74a1a17c": {
      "name": "legsOverHead",
      "images": [
        {
          "id": 970380,
          "hash": "a18be6beaa25f3b016a90cc17cb3584f6ad1a186",
          "size": 91125,
          "width": 853,
          "height": 1280
        },
        {
          "id": 970583,
          "hash": "81631824b1a36ee93f25c3f0b2a37fc6f9cad53b",
          "size": 112285,
          "width": 853,
          "height": 1280
        },
        {
          "id": 971157,
          "hash": "ed5fc298f3ac0f179a596e7d4d317f5b1fc64e5c",
          "size": 202834,
          "width": 2000,
          "height": 1333
        }
      ]
    },
    "ef5262c0-02e6-46d9-93d9-61e26ba9b24a": {
      "name": "Petals",
      "images": [
        {
          "id": 971158,
          "hash": "d52fbd4d41790f647074f9bb93d8d8a795376c61",
          "size": 174988,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971159,
          "hash": "9350a134b9aad750fbaa4919fb77cc908fcddcfa",
          "size": 221939,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971160,
          "hash": "0cf51df13bd3c4e31a57baee1696e175ba45731c",
          "size": 226196,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971161,
          "hash": "ac25a32a969acb0b7cdd7d02a8b49433063b3771",
          "size": 204649,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971162,
          "hash": "3b79b32c255548ac4aa8919994fdbca97a4200e8",
          "size": 210285,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971163,
          "hash": "504c9051e818a20154dd2a616e21d974191f7b15",
          "size": 237667,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971164,
          "hash": "80f4520c8c0122b424d0156816d6e3b361cf3295",
          "size": 182678,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971165,
          "hash": "e02fd81f99e44c47b23108f7416aa890519ee1f4",
          "size": 223973,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971166,
          "hash": "7bec7def558617de2b72f780c1baf1fbab76a526",
          "size": 217014,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971167,
          "hash": "a32a1ed3b4e1ef8539c2cb77aee13766a0f41203",
          "size": 213735,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971168,
          "hash": "33a07fb7ae696f4dc317ee63cdbd2a33474cae38",
          "size": 175345,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971169,
          "hash": "f07bf880d8037678d8a79032c3b1540a01099a85",
          "size": 172058,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971170,
          "hash": "853700a70ef3f0bbdbdc9ed0acc69bf3d18e5426",
          "size": 193560,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971171,
          "hash": "1ae948105cca709f9027666f8daeeec1f30c37d6",
          "size": 218148,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971172,
          "hash": "b129216be90fa3ff791c5f385123c967db0ed2ba",
          "size": 199785,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971173,
          "hash": "7cca3278213c35461bf9d1b71fac651e1439b530",
          "size": 186540,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971174,
          "hash": "a7b393beaf2113cd8735a2e888d7b93e41e25ed8",
          "size": 207556,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971175,
          "hash": "b575ae9f6019bc5251d2dcb10fe2252d1c8abecb",
          "size": 216277,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971176,
          "hash": "23fa68bbce026612e27cb3bc7d82aad91abda5ef",
          "size": 227624,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971177,
          "hash": "fa29ed083abdd8e1863ae5ecc6fbedcef364ea07",
          "size": 194704,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971178,
          "hash": "c5a28cb57586e9c3c61d4aefcf6cece350547856",
          "size": 224500,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971179,
          "hash": "69c8e51e6df716c74da6cf7aae8bc0bd592cbbe0",
          "size": 216374,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971180,
          "hash": "871dea6d01e5d161ffd1eff7bae57db15548a3e9",
          "size": 206180,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971181,
          "hash": "9b423053dc01c153ed1de470f6cc86ff1ea863ff",
          "size": 221917,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971182,
          "hash": "ec84855fd9ca43ebb052ac93bdc1752159b3c7fd",
          "size": 160512,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971183,
          "hash": "c3c4aaaf962cee25e52629bf12f23dc0cb1f8b26",
          "size": 232603,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971184,
          "hash": "c2dc183a8e8bfc605b425536a25ee3c5512a9407",
          "size": 219805,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971185,
          "hash": "f05c26b24833ab33211fb3364edca71f5d647b73",
          "size": 217477,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971186,
          "hash": "57b4b0424972f7344d367951a08f0134e4e8f5b6",
          "size": 202142,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971187,
          "hash": "a90334b83152fab9453caa44098376733ee85175",
          "size": 206766,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971188,
          "hash": "47f781aa824ae08dcbce9878f2eba2df901ee85c",
          "size": 200493,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971189,
          "hash": "2b81c0eb9a60f1b599f576d35fde42dac5be91d0",
          "size": 235769,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971190,
          "hash": "092b14c8d3cc8d3ce34fbccb5e3b1c4e88fa6305",
          "size": 205562,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971191,
          "hash": "a3397a3b83ddf6d822d240f4a7b2c60bb6f43c57",
          "size": 181688,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971192,
          "hash": "90dfe2facf1c353b9940a6e646e1e1ed58054bc3",
          "size": 202708,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971193,
          "hash": "17af5cf8a8155d23f3ccdec220a611e5606e7196",
          "size": 180015,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971194,
          "hash": "ae2d4969fad441846f3944a83c2e2caf2e97134c",
          "size": 177146,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971195,
          "hash": "e6deb3e386479525deed2b8fe1b0e70a7e511ea1",
          "size": 189999,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971196,
          "hash": "a48f410afd58cf7d87627ab53bd8a693d11aa171",
          "size": 170603,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971197,
          "hash": "ce4211aaf176e19740958b6604db2a64e677e276",
          "size": 212793,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971198,
          "hash": "02184ac8087e3c46178387d8cd16bc5bbd1838dd",
          "size": 211503,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971199,
          "hash": "325b8329b84463dd6be157693a31254c2883711d",
          "size": 170330,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971200,
          "hash": "707b338f9d3a77d90b8bc20b00f720b358d58e57",
          "size": 194605,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971201,
          "hash": "9cec67aefdadfc293b5f3002d5dad7ce8d9eebcb",
          "size": 235677,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971202,
          "hash": "d82d2079978e7dc9d12cbb51ba616125e456e804",
          "size": 265291,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971203,
          "hash": "383d801d796f2f40306bcea4ffd5f35ae6ce8f3a",
          "size": 181901,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971204,
          "hash": "806679a4013e124eb1d09a2bd5306edf2e92cfdc",
          "size": 225544,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971205,
          "hash": "6cd70bfeb99f04182b7d6cac9d11234383cb5fa5",
          "size": 201206,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971206,
          "hash": "a385d478c1fbc5bdd857b57ea845cd673bfa7032",
          "size": 238475,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971207,
          "hash": "4951b43f7688ef1071e63aa78293cb761ad30f70",
          "size": 217988,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971208,
          "hash": "04fab0c4b211d1d45577c63a71eea60906cd1bfc",
          "size": 192232,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971209,
          "hash": "e932f4ce0b7e11a60ca8eabdfc24774729fdb16f",
          "size": 197834,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971210,
          "hash": "b77218f923f10b231e968cf78f67c9549d73978a",
          "size": 202176,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971211,
          "hash": "097c872caa93b930e18359ec50a853666b621984",
          "size": 169729,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971212,
          "hash": "f9ea7f0bc023aea83cc165c6ae4dfe95c0583766",
          "size": 203654,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971213,
          "hash": "b2f0afacb29c8f5a251e165431327ae7d839d4fe",
          "size": 194438,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971214,
          "hash": "17975ae3694a8d2eec821e5a359b3388f62ad7b0",
          "size": 226231,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971215,
          "hash": "659b573d8511e869a24a11e83ac294796e6833da",
          "size": 191451,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971216,
          "hash": "7c089aaae3169bc08ae264e23b7d17d082e95e37",
          "size": 203899,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971217,
          "hash": "91afdc04f42c68788c8911f4c4d8a8c355c12877",
          "size": 235786,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971218,
          "hash": "6096765ded82827f9b7373a0043000402df4a26f",
          "size": 178082,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971219,
          "hash": "1dae08259cd85bd0efbba704a1955a5dcda82cfa",
          "size": 218345,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971220,
          "hash": "cb51e91497639c3a9dd6f0e1c9d30008e4ca12e8",
          "size": 176968,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971221,
          "hash": "0c24cc2ffb82d66eae575059f59a546536be7edf",
          "size": 168926,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971222,
          "hash": "015c22fd42d58c094476b7873b944f1023f667c2",
          "size": 190696,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971223,
          "hash": "5c8073b10698c4ef2d7841f2f91b5305146b6f3b",
          "size": 224544,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971224,
          "hash": "436859e53c4b816fc5a356eaaf907b95da9ecdb7",
          "size": 187634,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971225,
          "hash": "11c76075a31af7749cd0581a08f11257307406b8",
          "size": 202717,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971226,
          "hash": "c40079479582776a35f27c278ad48be9c71c23ec",
          "size": 185891,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971227,
          "hash": "2f21dedeeba9b4a372564fca43ae1454cfb11508",
          "size": 240525,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971228,
          "hash": "3c71b4ca65808d3c51f058edc8028fb6fba96212",
          "size": 160598,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971229,
          "hash": "de2278e62a78575a89405d86f414329ba4a5dc31",
          "size": 199780,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971230,
          "hash": "bafc6e21344171fde3c79c0c6d812636cd8e90f2",
          "size": 205544,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971231,
          "hash": "670f888efe408057ab1f28dc985be5492e862545",
          "size": 199428,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971232,
          "hash": "207385d96090f78933c96bb640e63787eb7ceea0",
          "size": 208243,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971233,
          "hash": "f86ca21309760f47cca62af2a7593166c43424bb",
          "size": 235816,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971234,
          "hash": "b4c505dabceb79e3997349b8304097a3d4238628",
          "size": 221852,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971235,
          "hash": "1548d5c1d744461d199d2ed686ab83d4399dcc01",
          "size": 193553,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971236,
          "hash": "4d238ee56965043fc42036607b464ded75d5f628",
          "size": 249014,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971237,
          "hash": "5007c795342c52cfa020ca9d586a581c20497a74",
          "size": 215568,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971238,
          "hash": "113ec9b06673e7c9b02209fe63780bfb8b3dc209",
          "size": 188147,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971157,
          "hash": "ed5fc298f3ac0f179a596e7d4d317f5b1fc64e5c",
          "size": 202834,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971239,
          "hash": "d8024da95515fbe076d93814c0576da5f12f4e33",
          "size": 208752,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971240,
          "hash": "f48c2f46f6d77e21c195a59d5951cee9e45ec83a",
          "size": 191206,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971241,
          "hash": "e3a23b62ee4251061450a9fff1e3ffef6ba9c159",
          "size": 221200,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971242,
          "hash": "4431e80a2a60f7e3dc3c55814032f6df71985a83",
          "size": 246878,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971243,
          "hash": "c64839f6a137d6421926b1f1180cffb28b8a6674",
          "size": 240548,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971244,
          "hash": "200f5d90606ef7f5f1e68e3864d14f709ebb9649",
          "size": 191243,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971245,
          "hash": "0517c72690dc69ba6eff4eac45da49fc28784780",
          "size": 219848,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971246,
          "hash": "29d0a0b8cf5f7971b647bf92ead7440abeff0947",
          "size": 200080,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971247,
          "hash": "919bcc2b8ed67198ed763e7501d9e081cfa629cb",
          "size": 189110,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971248,
          "hash": "02b3f54d41e1e91e6a6eac9d29f1d57fba02c13f",
          "size": 221428,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971249,
          "hash": "3c52c213e192a66244c54cc24ebe4142ad4a23e0",
          "size": 215826,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971250,
          "hash": "5bf2ced769ed3f54be53fb081ed5c865f981cc97",
          "size": 229382,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971251,
          "hash": "a917009306e417edc53440d002b4b7a862c50fdc",
          "size": 227927,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971252,
          "hash": "f03659c2680ef59fee6ad8435b238de234c43f34",
          "size": 221488,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971253,
          "hash": "b153a9dec1d509618094621556b83783d150209b",
          "size": 178263,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971254,
          "hash": "f4b6136854ef4b56c236375ecdce61c8abd3af27",
          "size": 214988,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971156,
          "hash": "c644048639036119c4eb6e42ad6ca0d025d9a0cc",
          "size": 211198,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971255,
          "hash": "011f5427d9326cc5ffa89f6f3479fbd31db5dafe",
          "size": 182142,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971256,
          "hash": "36d5bf3f919e45f9ed0eaab3c1fcfcdbfb4c845f",
          "size": 203144,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971257,
          "hash": "ae93cbb76869be89d4dc5fee4d31db60e124b3fe",
          "size": 204666,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971258,
          "hash": "7a5d2749443c286aa7ff0db1d562c0e2d1a9699b",
          "size": 212641,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971259,
          "hash": "b59a253262cb6f3a61327589360dab43cf95e7c8",
          "size": 203557,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971260,
          "hash": "d372d0157050a0df1d2a8d06815cf7784e0f17d9",
          "size": 210820,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971261,
          "hash": "43d63725f1d314be8e02f5fb5e5ab37d33d3011a",
          "size": 269600,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971262,
          "hash": "399eede2f57a681bf3ba4835bfb67f0916c7ada7",
          "size": 189744,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971263,
          "hash": "c9ab4e4b33742924b3c7a33b1d10f41d6812dbad",
          "size": 174148,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971264,
          "hash": "765105aa05dc21801de4728a22469025800f8c49",
          "size": 212128,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971265,
          "hash": "56c31c1c3108f9c429bf97abfdb2a635c6c9bfbd",
          "size": 195694,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971266,
          "hash": "f48d3f9412caebf3112d7e59751fed074ea5300e",
          "size": 206261,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971267,
          "hash": "1f71bfc6605ef002411579708e5dc2396932c16a",
          "size": 185358,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971268,
          "hash": "2b3fd962206eed6e761f3cc7e049576799351389",
          "size": 236688,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971269,
          "hash": "02dc80cdbc4a6227f2806728d829ba6e003be5c8",
          "size": 220394,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971270,
          "hash": "8ada709efe1411e729523c9e2c79a1a5a2f3772f",
          "size": 229781,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971271,
          "hash": "2dd6b151390eefe9d6d999618c07400bab21be24",
          "size": 210741,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971272,
          "hash": "e8deea8c7fc67a8240006faf382fa7a985996aa7",
          "size": 194509,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971273,
          "hash": "5350a7f02c33787af80997d488b892ac6a33005f",
          "size": 228251,
          "width": 1365,
          "height": 2048
        },
        {
          "id": 971274,
          "hash": "eeff1c4121e0f78feb820a74dcc88f1dc58c5e2c",
          "size": 212684,
          "width": 2000,
          "height": 1333
        },
        {
          "id": 971275,
          "hash": "805f0362355d8a57ca35c087964e5328cfcc2aba",
          "size": 222693,
          "width": 2000,
          "height": 1333
        }
      ]
    }
  },
  "files": {
    "femjoy-14277842-003.jpg": {
      "id": 969243,
      "hash": "95936c850880d4b03772cd14e42ee8fa3b25e60e",
      "size": 689455,
      "type": "image/jpeg",
      "width": 2800,
      "height": 1869
    },
    "femjoy-14277842-002.jpg": {
      "id": 969242,
      "hash": "00f1d34e11913723364771bd3e3624afbd3ad9d6",
      "size": 714890,
      "type": "image/jpeg",
      "width": 2800,
      "height": 1869
    },
    "120bpm.mp3": {
      "id": 969390,
      "hash": "83ac90d82a1cdcd4fabb5edd8a207be4943bba0c",
      "size": 259924,
      "type": "audio/mpeg"
    },
    "150bpm.mp3": {
      "id": 969391,
      "hash": "5f8818bc9030230e55d44779da44ecaa46ffe516",
      "size": 260600,
      "type": "audio/mpeg"
    },
    "180bpm.mp3": {
      "id": 969392,
      "hash": "dd3c97768ad8f9d3674f8f458225d5b635dd0986",
      "size": 259716,
      "type": "audio/mpeg"
    },
    "240bpm.mp3": {
      "id": 969393,
      "hash": "eb6bdbdc46cb6ceef2c95fc7101bdbd3409771c2",
      "size": 260444,
      "type": "audio/mpeg"
    },
    "300bpm.mp3": {
      "id": 969394,
      "hash": "2244e6762a4bf9721de5f81457e48750507b80b2",
      "size": 282839,
      "type": "audio/mpeg"
    },
    "12bpm.mp3": {
      "id": 969395,
      "hash": "30f1f9227d226168ac57285d0fcda9ee8daac993",
      "size": 259716,
      "type": "audio/mpeg"
    },
    "20bpm.mp3": {
      "id": 969396,
      "hash": "81315514392c0adf4696d22cc164157838de8729",
      "size": 251708,
      "type": "audio/mpeg"
    },
    "30bpm.mp3": {
      "id": 969397,
      "hash": "77b0fef34788c900aca8fc7377f164aa1cb9f676",
      "size": 263720,
      "type": "audio/mpeg"
    },
    "60bpm.mp3": {
      "id": 969398,
      "hash": "1e7f381eb0e7ef38087c81af75451073cd92c145",
      "size": 259872,
      "type": "audio/mpeg"
    },
    "90bpm.mp3": {
      "id": 969399,
      "hash": "45ce8037c9f43126866f6ca212d7f6cbaa53db31",
      "size": 261042,
      "type": "audio/mpeg"
    },
    "2-3.mp3": {
      "id": 969400,
      "hash": "297515571d4c9b80ffe5307f256762d446930c6f",
      "size": 282002,
      "type": "audio/mpeg"
    }
  },
  "editor": {
    "recentImages": [
      {
        "type": "gallery",
        "mimeType": "image/jpeg",
        "galleryId": "ef5262c0-02e6-46d9-93d9-61e26ba9b24a",
        "url": "gallery:ef5262c0-02e6-46d9-93d9-61e26ba9b24a/971169",
        "imageId": 971169
      },
      {
        "type": "gallery",
        "mimeType": "image/jpeg",
        "galleryId": "f0c7f265-d539-4b4a-9f92-a82d74a1a17c",
        "url": "gallery:f0c7f265-d539-4b4a-9f92-a82d74a1a17c/970583",
        "imageId": 970583
      },
      {
        "type": "gallery",
        "mimeType": "image/jpeg",
        "galleryId": "6aee930c-2419-40e8-bef3-f029d847609f",
        "url": "gallery:6aee930c-2419-40e8-bef3-f029d847609f/970377",
        "imageId": 970377
      },
      {
        "type": "gallery",
        "mimeType": "image/jpeg",
        "galleryId": "9f4f07ff-6377-416b-8876-de10912f999f",
        "url": "gallery:9f4f07ff-6377-416b-8876-de10912f999f/*"
      },
      {
        "type": "gallery",
        "mimeType": "image/jpeg",
        "galleryId": "e68b2c06-0c28-487c-b04b-ea26a6a4a886",
        "url": "gallery:e68b2c06-0c28-487c-b04b-ea26a6a4a886/969274",
        "imageId": 969274
      }
    ]
  },
  "init": "var version = 1.5\n\nvar defaultValues = {\n  name:null,\n  currentPage:null,\n  forcePage: null,\n  forcePageReason: null,\n  newGame:true,\n  firstVisit:true,\n  gotNameWrong:false,\n  attitude:0,\n  faps:0,\n  lastFap:Date.now(),\n  cum:0,\n  lastCum:null,\n  lastAttitude:null,\n  pageRuns:{},\n  lastGameProgress: 0,\n  lastGameActivity: 0,\n  version:version\n}\n  \nvar values = {}\n\nvar startupCallbackPage = null;\n\nvar dickOut = false;\nvar cumPunishment = null;\nvar lastPunishmentNum = null;\nvar lastPunishMessagetNum = null;\nvar punishMessage = null;\nvar punishReason = null;\nvar punishMessageLocal = null;\nvar punishMessageOnPunish = false;\nvar guessNumberStartRange = [1,5];\nvar guessNumberEndRange = [3,10];\nvar guessWelcomeMessage = null;\nvar lastGuessNumberStart = null;\nvar lastGuessNumberEnd = null;\nvar lastGuesses = [];\nvar lastMyNumber = null;\nvar useLastGuessNumber = false;\nvar useLastGuess = false;\nvar guessRewardPage = null;\nvar guessPunishmentPage = null;\nvar forceCumInMouth = false;\nvar inCEIPosition = false;\nvar didCEIPosition = false;\n\nvar currentGamePage = null;\nvar lastGamePage = null;\nvar currentGameProgress = 1;\nvar currentGameImagePage = null;\nvar gameImageCaller = null;\nvar needsGameImageLoad = true;\n\nvar rudenessThisGame = 0;\nvar altEndingImage = 0;\n\nvar roundMessage = null;\n\nvar numberOfFaps = null;\nvar bpmIndex = null;\n\nvar gameStats = null;\nvar totalStats = null;\n\nvar fapsThisGame = 0;\nvar cumThisGame = 0;\n\nvar gameInit = false;\nvar initCaller = null;\n\nvar pageRunsThisGame = {};\n\nvar beats = {};\n\nvar buttonSelectorMessages = [];\nvar buttonSelectorTimer = null\nvar buttonSelectorTimerIsSecret = null\nvar buttonSelectorTimeoutAction = null\nvar buttonSelectorTimeoutMessage = null\nvar buttonSelectorBpm = null\nvar buttonSelectorButtons = {}\n// var buttonSelectorLabels = []\n// var buttonSelectorEnablers = []\n\n// function updateButtonSelectors() {\n//   for (var i = 0, l = 109; i <= l; i++) {\n//     buttonSelectorLabels[i] = '' + i\n//     if (buttonSelectorButtons[i]) {\n//       buttonSelectorEnablers[i] = showButton(i)\n//     } else {\n//       buttonSelectorEnablers[i] = false\n//     }\n//   }\n// }\n\nfunction clearButtonSelectorButtons() {\n  buttonSelectorButtons = {}\n}\n\nfunction setButtonSelectorOptions(time, timeoutAction, bpm, isSercet,\n    timeoutMessage, buttons) {\n  buttonSelectorMessages = []\n  buttonSelectorTimer = time\n  buttonSelectorTimeoutAction = timeoutAction\n  buttonSelectorTimerIsSecret = isSercet\n  buttonSelectorTimeoutMessage = timeoutMessage\n  buttonSelectorBpm = bpm\n  buttonSelectorButtons = buttons || {}\n}\n\nfunction addButtonSelectorMessage(message, mode) {\n  buttonSelectorMessages.push({\n    message: message,\n    mode: mode\n  })\n}\n\nfunction addButtonSelectorButton(index, value, action, showHide) {\n  buttonSelectorButtons[index] = {\n    value: value, // Object passed back in action\n    action: action, // Action function\n    showHide: showHide // show/hide function or null/undefined === show\n  }\n}\n\nfunction getButtonSelectorButtons() {\n  return buttonSelectorButtons\n}\n\nfunction loadNumberSelector() {\n  // updateButtonSelectors()\n  pages.goto('button-selector')\n}\n\nfunction showButton(i) {\n  return !!(buttonSelectorButtons[i] && (\n    !buttonSelectorButtons[i].showHide ||\n    buttonSelectorButtons[i].showHide(buttonSelectorButtons[i], i)\n    ))\n}\nfunction buttonLabel(i) {\n  return buttonSelectorButtons[i] && buttonSelectorButtons[i].label\n}\nfunction buttonAction(i) {\n  if (buttonSelectorBpm) stopBeat(buttonSelectorBpm)\n  buttonSelectorButtons[i] && buttonSelectorButtons[i].action(buttonSelectorButtons[i], i)\n}\n\nvar welcomeMessage = null;\n\nvar newGameResetSkipFields = {\n  name:true\n}\n\nvar onAnswerPaymentComplete = function() {\n  \n}\n\nfunction upgradeVersion(oldVer, newVer) {\n  if (!oldVer || oldVer < 1.3) {\n    // Reset bad counts\n    setValue('faps', 0)\n    setValue('cum', 0)\n    // Use default name\n    if (values.name) {\n      setValue('firstVisit', false)\n    }\n    setValue('name', 'sweetie')\n    \n  }\n}\n\nfunction setBeats(bpm, sound) {\n  beats['b'+bpm] = sound;\n  sound.stop();\n}\n\nfunction setBeatVolume(){\n  for (var b in beats) {\n    beats[b].setVolume(0.8)\n  }\n}\n\nfunction initializeGame() {\n  initCaller = pages.getCurrentPageId()\n  if (!gameInit) {\n    pages.goto('init')\n  }\n}\n\n// pages.addEventListener('change', function() {\n//   console.log('page has changed')\n// })\n\n\nfunction startBeat(bpm){\n  // console.log('Startng beat','b'+bpm, beats['b'+bpm], beats)\n  return beats['b'+bpm].play()\n}\n\nfunction stopBeat(bpm){\n  return beats['b'+bpm].stop()\n}\n\nfunction stopAllBeats(){\n  for (var b in beats) {\n    beats[b].stop()\n  }\n}\n\nfunction startAllBeats(){\n  for (var b in beats) {\n    beats[b].play()\n  }\n}\n\nfunction pauseBeat(bpm){\n  return beats['b'+bpm].pause()\n}\n\nfunction incGameProgress() {\n  currentGameProgress++;\n  needsGameImageLoad=true;\n  pages.goto('game-progress')\n}\n\nfunction setGameProgress(val) {\n  currentGameProgress = val;\n  needsGameImageLoad=true;\n  pages.goto('game-progress')\n}\n\nfunction endGame() {\n  setValue('lastGameProgress', 0)\n}\n\nfunction getLastGameProgress() {\n  return values.lastGameProgress\n}\n\nfunction hasValidGameInProgress() {\n  var lastGameDiff = (Date.now() - values.lastGameActivity) / 1000;\n  return values.lastGameProgress > 0 && lastGameDiff < (60 * 10); // not over 10 min ago.\n}\n\nfunction loadGameImageIfNeeded() {\n  if (needsGameImageLoad) {\n    gameImageCaller = pages.getCurrentPageId()\n    pages.goto(currentGameImagePage)\n  }\n}\n\nfunction returnFromGameImageLoad() {\n  needsGameImageLoad = false;\n  pages.goto(gameImageCaller)\n}\n\nfunction processRound(answer,isCorrect,isIdiot,isDuplicate,isOffensive,\n     triesLeft,\n     failedMessage,\n     successMessage) {\n  if (isCorrect || answer === 'win989') {\n    roundMessage = successMessage || randomString(winningGuessMessages)\n    pages.goto('answer-correct')\n    return\n  }\n  if (isOffensive) {\n    useLastGuessNumber = !!triesLeft\n    guessWelcomeMessage=\"Okay, but can you try to be nice?\"\n    takeOffenseInRound()\n    return;\n  }\n  roundMessage = failedMessage || randomString(\n      isDuplicate ? sameGuessMessages :\n      isIdiot ? idiotGuessMessages : \n      losingGuessMessages\n    )\n  // pages.goto('answer-wrong-no-retries')\n  if (triesLeft) {\n    pages.goto('answer-wrong-has-retries')\n  } else {\n    pages.goto('answer-wrong-no-retries')\n  }\n}\n\nfunction takeOffenseInRound() {\n  needsGameImageLoad = true\n  returnPage = pages.getCurrentPageId() \n  punishReason=\"being rude\"\n  if (rudenessThisGame>0) {\n    console.log('rude at game progress: ',currentGameProgress)\n    var ppc = currentGameProgress <= 5 ? 1 : 2\n    if (rudenessThisGame>1) {\n      ppc = currentGameProgress <= 5 ? 2 : 3\n    }\n    if (rudenessThisGame>2) {\n      ppc = currentGameProgress <= 5 ? 3 : 4\n    }\n    setPageRunCount('rude-punishOrEnd1', ppc)\n    incPageRunCount('rude-punishOrEnd1')\n    setPageRunCountThisGame('rude-punishOrEnd1', 0)\n  }\n  pages.goto('rude-punishOrEnd1')\n}\n\nfunction arrayContains(array, value) {\n  for (i = 0, l = array.length; i < l; i++) { \n    if (array[i] === value) return true;\n  }\n  return false;\n}\n\nfunction stringContains(string, array) {\n  for (i = 0, l = array.length; i < l; i++) { \n    if (string.indexOf(array[i]) > -1) {\n      console.log('Found', array[i], 'in:', string)\n      return true;\n    }\n  }\n  return false;\n}\n  \n\nfunction fapsBetween(start, end, bpm) {\n  var bps = bpm / 60;\n  var diff = (end - start) / 1000;\n  var faps = bps * diff\n  return faps\n}\n\nfunction incFap(count) {\n  fapsThisGame += count\n  var faps = values.faps;\n  setValue('faps',faps + count)\n  setValue('lastFap',Date.now())\n}\n\nfunction incCum(count) {\n  cumThisGame += count\n  var cum = values.cum;\n  setValue('cum',cum + count)\n  setValue('lastCum',Date.now())\n}\n\nfunction getPageRunCount(pageId) {\n  return values.pageRuns[pageId] || 0\n}\n\nfunction getPageRunCountThisGame(pageId) {\n  return pageRunsThisGame[pageId] || 0\n}\n\nfunction clearPageRunCount(pageId) {\n  values.pageRuns[pageId] = 0\n  clearPageRunCountThisGame(pageId)\n  setValue('pageRuns', values.pageRuns)\n}\n\nfunction clearPageRunCountThisGame(pageId) {\n  pageRunsThisGame[pageId] = 0\n}\n\nfunction setPageRunCountThisGame(pageId, count) {\n  pageRunsThisGame[pageId] = count\n}\n\nfunction incPageRunCountThisGame(pageId) {\n  var count = pageRunsThisGame[pageId] || 0\n  pageRunsThisGame[pageId] = count + 1\n}\n\nfunction setPageRunCount(pageId, count) {\n  console.log('setting page count: ' + pageId, count)\n  values.pageRuns[pageId] = count\n  setValue('pageRuns', values.pageRuns)\n  setPageRunCountThisGame(pageId, count)\n}\n\nfunction incPageRunCount(pageId) {\n  var count = values.pageRuns[pageId] || 0\n  values.pageRuns[pageId] = count + 1\n  setValue('pageRuns', values.pageRuns)\n  incPageRunCountThisGame(pageId)\n  return count\n}\n\nfunction incAttitude(val) {\n  values.attitude += val\n  setAttitude(values.attitude)\n}\n\nfunction setAttitude(val) {\n  values.attitude = val\n  values.lastAttitude = val > 0 ? Date.now() : null\n  teaseStorage.setItem('attitude',values.attitude)\n  teaseStorage.setItem('lastAttitude',values.lastAttitude)\n}\n\nfunction hasRecentAttitude() {\n  return values.attitude > 0 && (Date.now() - (1000 * 60 * 45)) < values.lastAttitude // Says upset for 45 minutes\n}\n\nfunction loadSavedValue(key,defaultValue) {\n  var v=teaseStorage.getItem(key)\n  if (key === 'pageRuns' && typeof v !== 'object') {\n    v = {}\n  }\n  if (v === undefined && key !== 'version') {\n    v=defaultValue\n    teaseStorage.setItem(key,v)\n  }\n  return v\n}\n\nfunction resetSavedValues() {\n  for (var k in defaultValues) {\n    var v=defaultValues[k]\n    values[k]=v\n    teaseStorage.setItem(k,v)\n  }\n}\n\nfunction loadSavedValues() {\n  for (var k in defaultValues) {\n    values[k]=loadSavedValue(k,defaultValues[k])\n  }\n  console.log('Loaded Values')\n  console.log(values)\n  if (values.version !== version) {\n    console.log('upgrading version:', values.version, 'to', version)\n    upgradeVersion(values.version, version)\n    setValue('version', version)\n  }\n}\n\nfunction setValue(key,value) {\n  values[key]=value\n  teaseStorage.setItem(key,value)\n  if(values.newGame && !newGameResetSkipFields[key]){\n    values.newGame=false\n    teaseStorage.setItem('newGame',false)\n  }\n}\n\nfunction getValue(key) {\n  return values[key]\n}\n\nfunction randomIntExcluding(min, max, ex) {\n  var result = randomInt(min, max)\n  while (ex !== null && max - min > 1 && result === ex) {\n    result = randomInt(min, max)\n  }\n  return result\n}\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction weightedCoinFlip() {\n  // TODO: Weight based on attitude\n  return (Math.floor(Math.random() * 2) === 0)\n}\n\nfunction coinFlip() {\n  return (Math.floor(Math.random() * 2) === 0)\n}\n\nfunction removeNotifications() {\n  if (Notification.get('edging')) {\n    Notification.get('edging').remove()\n  }\n  if (Notification.get('cumming')) {\n    Notification.get('cumming').remove()\n  }\n}\n\nfunction missingNotifications() {\n  return !Notification.get('edging') || !Notification.get('cumming')\n}\n\nfunction initNotifications() {\n  if (missingNotifications()) {\n    startupCallbackPage = pages.getCurrentPageId()\n    pages.goto('start')\n  }\n}\n\nvar randomStringHistory = {}\n\nfunction randomString(stringArray, start, end) {\n  start = Math.min(start || 0,stringArray.length)\n  end = end || stringArray.length\n  var key = JSON.stringify(stringArray)\n  var lastResults = randomStringHistory[key]\n  if (!lastResults || Object.keys(lastResults).length >= (end-start)) {\n    lastResults = {}\n    randomStringHistory[key] = lastResults\n  }\n  var index = randomInt(start,end-1)\n  while (lastResults[index]) {\n    index = randomInt(start,end-1)\n  }\n  lastResults[index] = true\n  return stringArray[index]\n}\n\nfunction updateStats() {\n  if (gameStats && totalStats) {\n    gameStats.setTitle('<b>Game Stats</b><br>Faps: ' + fapsThisGame + '<br>Cum: ' + cumThisGame)\n  }\n}\n\n\n\nfunction hasOffensiveWords(string) {\n  return stringContains(string, offensiveWords)\n}\n\nvar offensiveWords = [\n  \"fuck\",\n  \"cock\",\n  \"dick\",\n  \"ass\",\n  \"pussy\",\n  \"eat\",\n  \"face\",\n  \"shit\",\n  \"ass\",\n  \"finger\",\n  \"fist\",\n  \"cunt\",\n  \"bitch\",\n  \"whore\",\n  \"rape\",\n  \"snatch\",\n  \"bucket\",\n  \"facial\",\n  \"choke\",\n  \"die\",\n  \"anal\",\n  \"gape\",\n  \"bleed\",\n  \"blood\",\n  \"kill\",\n  \"murder\",\n  \"gang\",\n  \"gag\",\n  \"hang\",\n  \"strangle\",\n  \"punch\",\n  \"kick\",\n  \"hit\",\n  \"slap\",\n  \"suck\",\n  \"deep\"\n  ]\n\nvar losingGuessMessages = [\n  \"Sorry, that's not it.\",\n  \"Nope. Wrong.\",\n  \"Wrong.\",\n  \"That would be right, if you weren't wrong.\",\n  \"Not exactly.\",\n  \"Nope. Sorry.\",\n  \"Good try, but no!\",\n  \"That's not right. Sorry.\"\n  ]\n\nvar sameGuessMessages = [\n  \"You already tried that!\",\n  \"Again? You're not even trying.\",\n  \"You keep choosing the same wrong answer!\"\n  ]\n\nvar idiotGuessMessages = [\n  \"No, silly!\",\n  \"You're not even trying, are you.\",\n  \"You couldn't be more wrong!\",\n  \"That's just pathetic.\",\n  \"You really want to lose, don't you!\",\n  \"Not even on the same planet!\",\n  \"No! Way off!\"\n  ]\n\nvar winningGuessMessages = [\n  \"You got it!\",\n  \"That's exactly right!\",\n  \"Right on!\",\n  \"Good job!\",\n  \"Yay!\",\n  \"Nice!\",\n  \"Right!\",\n  \"On the nose!\"\n  ]\n  \nvar tryAnotherGuessMessages = [\n  \"Do you want to try again?\",\n  \"Another try?\",\n  \"Take another shot?\",\n  \"I know you can do it! Try again?\",\n  \"Do it again?\"\n  ]\n\n\nloadSavedValues()\n"
}